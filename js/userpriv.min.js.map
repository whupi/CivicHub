{"version":3,"sources":["userpriv.js"],"names":["$","getTitleHtml","id","phraseId","ew","language","phrase","hik","jtable","prototype","_createErrorDialogDiv","_showError","message","alert","extend","options","messages","serverCommunicationError","loadingMessage","noDataAvailable","_timer","_fields","table","title","display","data","row","record","index","sorting","forEach","name","trueValue","priv","checked","permission","allowed","paging","defaultSorting","fields","actions","listAction","params","rows","permissions","slice","toLowerCase","map","includes","jtSorting","asc","match","sort","a","b","Result","Object","assign","Records","rowInserted","event","find","on","$this","this","parseInt","value","loadingRecords","querySelector","classList","add","recordsLoaded","serverResponse","$mc","$t","$c","useFixedHeaderTable","tableHeight","height","addClass","USE_OVERLAY_SCROLLBARS","overlayScrollbars","overlayScrollbarsOptions","append","$sort","empty","initMultiSelectCheckboxes","fixLayoutHeight","e","cancel","later","val","trigger","jQuery"],"mappings":"CAAA,SAAUA,GA4DN,SAASC,EAAaC,EAAIC,GACtB,MAAO,yFAA2FD,EAAK,SAAWA,EAA3G,sEACuCA,EAAK,KAAOE,GAAGC,SAASC,OAAO,cAAgBH,GAAYD,IAAO,iBA5DpHF,EAAEO,IAAIC,OAAOC,UAAUC,sBAAwB,aAE/CV,EAAEO,IAAIC,OAAOC,UAAUE,WAAa,SAAUC,GAC1CR,GAAGS,MAAMD,IAGbZ,EAAEc,QAAO,EAAMd,EAAEO,IAAIC,OAAOC,UAAUM,QAAQC,SAAU,CACpDC,yBAA0Bb,GAAGC,SAASC,OAAO,4BAC7CY,eAAgBd,GAAGC,SAASC,OAAO,WACnCa,gBAAiBf,GAAGC,SAASC,OAAO,cAuDxC,IA8DIc,EA9DAC,EAAU,CACVC,MAAO,CACHC,MAAO,2BAA6BnB,GAAGC,SAASC,OAAO,UAAY,UACnEkB,QA1CR,SAA0BC,GACtB,IAAIC,EAAMD,EAAKE,OACf,OAAOD,EAAIJ,MAAQ,oCAAsCI,EAAIE,MAAQ,gBAyCjEC,SAAS,IAGjB,CAAC,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,SAAU,SAAU,SAASC,SAAQ,SAAS5B,GA3DlG,IAAsB6B,EAAMC,EA4DxBX,EAAQnB,GAAM,CACVqB,MAAOtB,EAAaC,GACpBsB,SA9DcO,EA8DQ7B,EA9DF8B,EA8DMC,KAAK/B,GA7D5B,SAASuB,GACZ,IAAIC,EAAMD,EAAKE,OACXzB,EAAK6B,EAAO,IAAML,EAAIE,MACtBM,GAAWR,EAAIS,WAAaH,IAAcA,EAE9C,OADAN,EAAIQ,QAAUA,EACP,yGAA2GhC,EAAK,SAAWA,EAC9H,YAAc8B,EAAY,iBAAmBN,EAAIE,MAAQ,KACxDM,EAAU,WAAa,MACrBR,EAAIU,QAAUJ,IAAcA,EAAa,YAAc,IAAM,YAsDpEH,SAAS,MAKjB7B,EAAE,uCAAuCQ,OAAO,CAC5C6B,QAAQ,EACRR,SAAS,EACTS,eAAgB,YAChBC,OAAQlB,EACRmB,QAAS,CAAEC,WAvDf,SAAoBhB,EAAMiB,GACtB,IAAIC,EAAOV,KAAKW,YAAYC,MAAM,GAClC,GAAIpB,GAAQA,EAAKH,MAAO,CACpB,IAAIA,EAAQG,EAAKH,MAAMwB,cACvBH,EAAO3C,EAAE+C,IAAIJ,GAAM,SAASjB,GACxB,OAAIA,EAAIJ,MAAMwB,cAAcE,SAAS1B,GAC1BI,EACJ,QAGf,GAAIgB,GAAUA,EAAOO,UAAW,CAC5B,IAAIC,EAAMR,EAAOO,UAAUE,MAAM,QACjCR,EAAKS,MAAK,SAASC,EAAGC,GAClB,OAAIA,EAAEhC,MAAMwB,cAAgBO,EAAE/B,MAAMwB,cACzB,GAAS,EAAI,EACfQ,EAAEhC,MAAMwB,gBAAkBO,EAAE/B,MAAMwB,cAChC,EACFQ,EAAEhC,MAAMwB,cAAgBO,EAAE/B,MAAMwB,cAC9B,EAAQ,GAAK,OADnB,KAIb,MAAO,CACHS,OAAQ,KACRb,OAAQc,OAAOC,OAAO,GAAIhC,EAAMiB,GAChCgB,QAASf,KAgCbgB,YAAa,SAAUC,EAAOnC,GACfA,EAAKC,IACXmC,KAAK,wBAAwBC,GAAG,SAAS,WAC1C,IAAIC,EAAQ/D,EAAEgE,MACVpC,EAAQqC,SAASF,EAAMtC,KAAK,SAAU,IACtCyC,EAAQD,SAASF,EAAMtC,KAAK,SAAU,IACtCuC,KAAK9B,QACLD,KAAKW,YAAYhB,GAAOO,YAAc+B,EAEtCjC,KAAKW,YAAYhB,GAAOO,YAAcF,KAAKW,YAAYhB,GAAOO,WAAa+B,MAGvFC,eAAgB,WACZH,KAAKI,cAAc,WAAWC,UAAUC,IAAI,QAAS,aAEzDC,cAAe,SAAUX,EAAOnC,GAC5B,IAAII,EAAUJ,EAAK+C,eAAe9B,OAAOO,UACrCwB,EAAMzE,EAAEgE,MAAMH,KAAK,0BACnBa,EAAKD,EAAIZ,KAAK,WACdc,EAAKD,EAAGb,KAAK,yCACbe,sBACIC,aACAJ,EAAIK,OAAOD,aACfH,EAAGK,SAAS,0CACR3E,GAAG4E,wBACHP,EAAIQ,kBAAkB7E,GAAG8E,2BAE5BP,EAAGd,KAAK,yBAAyB,IAClCc,EAAGQ,OAAO,8CACdC,MAAQT,EAAGd,KAAK,yBAAyBwB,QACrCxD,EAAQsB,MAAM,QACdiC,MAAMD,OAAO/E,GAAGC,SAASC,OAAO,WAC3BuB,EAAQsB,MAAM,UACnBiC,MAAMD,OAAO/E,GAAGC,SAASC,OAAO,aACpCF,GAAGkF,4BACHlF,GAAGmF,qBAMXvF,EAAE,eAAe8D,GAAG,8BAA8B,SAAS0B,GACnDpE,GACAA,EAAOqE,SACXrE,EAASpB,EAAE0F,MAAM,IAAK,MAAM,WACxB1F,EAAE,uCAAuCQ,OAAO,OAAQ,CACpDc,MAAOtB,EAAE,eAAe2F,cAMpC3F,EAAE,eAAe4F,QAAQ,WA5I7B,CA6IGC","sourcesContent":["(function($) {\r\n\r\n    $.hik.jtable.prototype._createErrorDialogDiv = function () {};\r\n\r\n    $.hik.jtable.prototype._showError = function (message) {\r\n        ew.alert(message);\r\n    };\r\n\r\n    $.extend(true, $.hik.jtable.prototype.options.messages, {\r\n        serverCommunicationError: ew.language.phrase(\"ServerCommunicationError\"),\r\n        loadingMessage: ew.language.phrase(\"Loading\"),\r\n        noDataAvailable: ew.language.phrase(\"NoRecord\")\r\n    });\r\n\r\n    function getDisplayFn(name, trueValue) {\r\n        return function(data) {\r\n            var row = data.record,\r\n                id = name + '_' + row.index,\r\n                checked = (row.permission & trueValue) == trueValue;\r\n            row.checked = checked;\r\n            return '<div class=\"form-check\"><input type=\"checkbox\" class=\"form-check-input ew-priv ew-multi-select\" name=\"' + id + '\" id=\"' + id +\r\n                '\" value=\"' + trueValue + '\" data-index=\"' + row.index + '\"' +\r\n                (checked ? ' checked' : '') +\r\n                (((row.allowed & trueValue) != trueValue) ? ' disabled' : '') + '></div>';\r\n        };\r\n    }\r\n\r\n    function displayTableName(data) {\r\n        var row = data.record;\r\n        return row.table + '<input type=\"hidden\" name=\"table_' + row.index + '\" value=\"1\">';\r\n    }\r\n\r\n    function getRecords(data, params) {\r\n        var rows = priv.permissions.slice(0);\r\n        if (data && data.table) {\r\n            var table = data.table.toLowerCase();\r\n            rows = $.map(rows, function(row) {\r\n                if (row.table.toLowerCase().includes(table))\r\n                    return row;\r\n                return null;\r\n            });\r\n        }\r\n        if (params && params.jtSorting) {\r\n            var asc = params.jtSorting.match(/ASC$/);\r\n            rows.sort(function(a, b) { // Case-insensitive\r\n                if (b.table.toLowerCase() > a.table.toLowerCase())\r\n                    return (asc) ? -1 : 1;\r\n                else if (b.table.toLowerCase() === a.table.toLowerCase())\r\n                    return 0\r\n                else if (b.table.toLowerCase() < a.table.toLowerCase())\r\n                    return (asc) ? 1 : -1;\r\n            });\r\n        }\r\n        return {\r\n            Result: \"OK\",\r\n            params: Object.assign({}, data, params),\r\n            Records: rows\r\n        };\r\n    }\r\n\r\n    function getTitleHtml(id, phraseId) {\r\n        return '<div class=\"form-check\"><input type=\"checkbox\" class=\"form-check-input ew-priv\" name=\"' + id + '\" id=\"' + id + '\" data-ew-action=\"select-all\">' +\r\n            '<label class=\"form-check-label\" for=\"' + id + '\">' + ew.language.phrase(\"Permission\" + (phraseId || id)) + '</label></div>'\r\n    }\r\n\r\n    // Fields\r\n    var _fields = {\r\n        table: {\r\n            title: '<span class=\"fw-normal\">' + ew.language.phrase(\"Tables\") + '</span>',\r\n            display: displayTableName,\r\n            sorting: true\r\n        }\r\n    };\r\n    [\"add\", \"delete\", \"edit\", \"list\", \"lookup\", \"view\", \"search\", \"import\", \"admin\"].forEach(function(id) {\r\n        _fields[id] = {\r\n            title: getTitleHtml(id),\r\n            display: getDisplayFn(id, priv[id]),\r\n            sorting: false\r\n        };\r\n    });\r\n\r\n    // Init\r\n    $(\".ew-card.ew-user-priv .ew-card-body\").jtable({\r\n        paging: false,\r\n        sorting: true,\r\n        defaultSorting: \"table ASC\",\r\n        fields: _fields,\r\n        actions: { listAction: getRecords },\r\n        rowInserted: function (event, data) {\r\n            var $row = data.row;\r\n            $row.find(\"input[type=checkbox]\").on(\"click\", function() {\r\n                var $this = $(this),\r\n                    index = parseInt($this.data(\"index\"), 10),\r\n                    value = parseInt($this.data(\"value\"), 10);\r\n                if (this.checked)\r\n                    priv.permissions[index].permission |= value;\r\n                else\r\n                    priv.permissions[index].permission ^= priv.permissions[index].permission ^ value;\r\n            });\r\n        },\r\n        loadingRecords: function () {\r\n            this.querySelector(\".jtable\").classList.add(\"table\", \"table-sm\");\r\n        },\r\n        recordsLoaded: function (event, data) {\r\n            var sorting = data.serverResponse.params.jtSorting,\r\n                $mc = $(this).find(\".jtable-main-container\"),\r\n                $t = $mc.find(\".jtable\"),\r\n                $c = $t.find(\".jtable-column-header-container:first\");\r\n            if (useFixedHeaderTable) {\r\n                if (tableHeight)\r\n                    $mc.height(tableHeight);\r\n                $t.addClass(\"table-head-fixed ew-fixed-header-table\");\r\n                if (ew.USE_OVERLAY_SCROLLBARS)\r\n                    $mc.overlayScrollbars(ew.overlayScrollbarsOptions);\r\n            }\r\n            if (!$c.find(\".ew-table-header-sort\")[0])\r\n                $c.append('<span class=\"ew-table-header-sort\"></span>');\r\n            $sort = $c.find(\".ew-table-header-sort\").empty();\r\n            if (sorting.match(/ASC$/))\r\n                $sort.append(ew.language.phrase(\"SortUp\"));\r\n            else if (sorting.match(/DESC$/))\r\n                $sort.append(ew.language.phrase(\"SortDown\"));\r\n            ew.initMultiSelectCheckboxes();\r\n            ew.fixLayoutHeight();\r\n        }\r\n    });\r\n\r\n    // Re-load records on search\r\n    var _timer;\r\n    $(\"#table-name\").on(\"keydown keypress cut paste\", function(e) {\r\n        if (_timer)\r\n            _timer.cancel();\r\n        _timer = $.later(200, null, function() {\r\n            $(\".ew-card.ew-user-priv .ew-card-body\").jtable(\"load\", {\r\n                table: $(\"#table-name\").val()\r\n            });\r\n        });\r\n    });\r\n\r\n    // Load all records\r\n    $(\"#table-name\").trigger(\"keydown\");\r\n})(jQuery);\r\n"]}