{"version":3,"sources":["./dist/js/tempus-dominus.js"],"names":["tempusDominus","$","core","luxon","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","DateTime","Date","constructor","super","arguments","this","locale","numberingSystem","nonLeapLadder","leapLadder","setLocale","static","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","clone","year","month","hours","minutes","seconds","startOf","unit","startOfTheWeek","undefined","setMilliseconds","setSeconds","setMinutes","setHours","manipulate","weekDay","setDate","setMonth","endOf","value","format","template","Intl","DateTimeFormat","isBefore","compare","valueOf","isAfter","isSame","convert","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","dateStyle","timeStyle","formatToParts","filter","x","type","secondsFormatted","second","minutesFormatted","minute","hoursFormatted","hour","twelveHoursFormatted","hour12","meridiem","_a","find","p","dateFormatted","getDay","monthFormatted","setFullYear","week","ordinal","computeOrdinal","weekday","getUTCDay","weekNumber","Math","floor","weeksInWeekYear","weekYear","p1","last","p2","isLeapYear","TdError","Error","NAME","Namespace","version","dataKey","events","Events","key","change","update","error","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","day","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","toggleMeridiem","collapsing","collapse","inline","errorMessages","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRage","lower","upper","failedToParseDate","soft","console","warn","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","dateString","DefaultOptions","restrictions","minDate","maxDate","disabledDates","enabledDates","daysOfWeekDisabled","disabledTimeIntervals","disabledHours","enabledHours","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","stepping","useCurrent","defaultDate","localization","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","selectTime","selectDate","dayViewHeaderFormat","keepInvalid","debug","allowInputToggle","viewDate","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","hooks","inputParse","inputFormat","meta","DatePickerModes","name","className","step","Collapse","target","classList","contains","style","height","remove","add","setTimeout","getTransitionDurationFromElement","scrollHeight","getBoundingClientRect","offsetHeight","element","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","Actions","context","_context","do","action","_b","_c","currentTarget","dataset","lastPicked","dates","_viewDate","manipulateAndSet","newDate","_validation","isValid","_setValue","lastPickedIndex","hideOrClock","_options","ActionTypes","showClock","_display","_currentViewMode","_viewUpdate","_showMode","pickerSwitch","_updateCalendarHeader","_minViewModeNumber","selectDay","index","pickedIndex","_hasTime","selectHour","selectMinute","selectSecond","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","getAttribute","setAttribute","innerHTML","_iconTag","outerHTML","_update","querySelectorAll","htmlElement","toggle","showHours","showMinutes","showSeconds","classToUse","getElementsByClassName","DateDisplay","_picker","container","document","createElement","append","_daysOfTheWeek","div","appendChild","i","switcher","parentElement","getElementsByTagName","innerDate","containerClone","innerText","classes","push","_unset","isPicked","row","htmlDivElement","MonthDisplay","OptionConverter","providedOptions","mergeTo","newOptions","path","ignoreProperties","processKey","providedType","defaultType","dateTime","_dateConversion","_typeCheckNumberArray","length","_typeCheckDateArray","Array","isArray","valueObject","vk","subOptionName","keyOptions","includes","substring","HTMLElement","Element","toString","spread","provided","mergeOption","copyTo","unsupportedOptions","flattenedOptions","_flattenDefaultOptions","errors","map","didYouMean","y","defaultOptionValue","hasOwnProperty","lastIndexOf","options","eData","tdTargetInput","tdTargetToggle","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","startsWith","_mergeOptions","JSON","stringify","converted","_dateTypeCheck","_flatback","deepKeys","t","pre","entries","flatMap","v","config","Dates","_dates","picked","set","from","targetDate","getFormatByUnit","innerDateFormatted","indexOf","_triggerEvent","oldDate","isClear","factor","startYear","noIndex","updateInput","_input","newValue","splice","round","reason","YearDisplay","getStartEndYear","_startYear","_endYear","DecadeDisplay","start","end","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_gridColumns","_grid","timesDiv","querySelector","gridTemplateAreas","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","getSeparator","colon","divElement","button","trim","HourDisplay","MinuteDisplay","secondDisplay","Display","_isVisible","_documentClickEvent","composedPath","_element","_actionsClickEvent","_action","_dateDisplay","_monthDisplay","_yearDisplay","_decadeDisplay","_timeDisplay","_hourDisplay","_minuteDisplay","_secondDisplay","_widget","isVisible","_hasDate","tries","direction","_buildWidget","onlyClock","body","_popperInstance","createPopper","modifiers","enabled","placement","documentElement","dir","addEventListener","max","min","datePickerMode","picker","showing","removeEventListener","_dispose","parentNode","removeChild","dateView","_headTemplate","timeView","_toolbar","arrow","title","icon","iconClass","svg","DOMTokenList","prototype","apply","_rebuild","wasVisible","Validation","granularity","_isInDisabledDates","_isInEnabledDates","_isInDisabledHours","_isInEnabledHours","to","testDate","formattedDate","__proto__","TempusDominus","_subscribers","_isDisabled","_notifyChangeEventContext","_inputChangeEvent","setViewDate","valueSplit","_toggleClickEvent","_initializeOptions","_initializeInput","_initializeToggle","updateOptions","reset","disable","enable","removeAttribute","subscribe","eventTypes","callbacks","callBackArray","returnArray","eventType","unsubscribe","_unsubscribe","bind","dispose","_toggle","event","_handleAfterChangeEvent","dispatchEvent","CustomEvent","detail","jQuery","trigger","callback","publish","eventName","includeDataset","_dataToOptions","_validateConflcits","findIndex","_","NumberFormat","resolvedOptions","fromJSDate","toFormat","parsedDate","fromFormat","toJSDate","getTime","tagName","query","clearTimeout","_currentPromptTimeTimeout","option","argument","jQueryHandleThis","each","me","data","extend","isDateUpdateThroughDateOptionFromClientCode","ret","$element","$selector","selector","attr","test","fn","jQueryInterface","Constructor","noConflict","Popper"],"mappings":"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","sourcesContent":["/*!\n  * Tempus Dominus v6.0.0-beta2 (https://getdatepicker.com/)\n  * Copyright 2013-2022 [object Object]\n  * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n  */\nvar tempusDominus = (function ($, core, luxon) {\n    'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () { return e[k]; }\n                    });\n                }\n            });\n        }\n        n[\"default\"] = e;\n        return n;\n    }\n\n    var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n    var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n    var Unit;\r\n    (function (Unit) {\r\n        Unit[\"seconds\"] = \"seconds\";\r\n        Unit[\"minutes\"] = \"minutes\";\r\n        Unit[\"hours\"] = \"hours\";\r\n        Unit[\"date\"] = \"date\";\r\n        Unit[\"month\"] = \"month\";\r\n        Unit[\"year\"] = \"year\";\r\n    })(Unit || (Unit = {}));\r\n    /**\r\n     * For the most part this object behaves exactly the same way\r\n     * as the native Date object with a little extra spice.\r\n     */\r\n    class DateTime extends Date {\r\n        constructor() {\r\n            super(...arguments);\r\n            /**\r\n             * Used with Intl.DateTimeFormat\r\n             */\r\n            this.locale = 'default';\r\n            this.numberingSystem = ''; //***\r\n            this.nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            this.leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\r\n        }\r\n        /**\r\n         * Chainable way to set the {@link locale}\r\n         * @param value\r\n         */\r\n        setLocale(locale, numberingSystem) {\r\n            this.locale = locale;\r\n            if (numberingSystem)\r\n                this.numberingSystem = numberingSystem;\r\n            return this;\r\n        }\r\n        /**\r\n         * Converts a plain JS date object to a DateTime object.\r\n         * Doing this allows access to format, etc.\r\n         * @param  date\r\n         */\r\n        static convert(date, locale = 'default', numberingSystem) {\r\n            if (!date)\r\n                throw `A date is required`;\r\n            return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()).setLocale(locale, numberingSystem); //***\r\n        }\r\n        /**\r\n         * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n         */\r\n        get clone() {\r\n            return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale, this.numberingSystem); //***\r\n        }\r\n        /**\r\n         * Sets the current date to the start of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n         * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n         * @param unit\r\n         * @param startOfTheWeek Allows for the changing the start of the week.\r\n         */\r\n        startOf(unit, startOfTheWeek = 0) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(0);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(0, 0);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(0, 0, 0);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(0, 0, 0, 0);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(startOfTheWeek - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.startOf(Unit.date);\r\n                    this.setDate(1);\r\n                    break;\r\n                case 'year':\r\n                    this.startOf(Unit.date);\r\n                    this.setMonth(0, 1);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Sets the current date to the end of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n         * would return April 30, 2021, 11:59:59.999 PM\r\n         * @param unit\r\n         */\r\n        endOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(999);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(59, 999);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(59, 59, 999);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(23, 59, 59, 999);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(6 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.month);\r\n                    this.setDate(0);\r\n                    break;\r\n                case 'year':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.year);\r\n                    this.setDate(0);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Change a {@link unit} value. Value can be positive or negative\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n         * would return May 30, 2021, 11:45:32.984 AM\r\n         * @param value A positive or negative number\r\n         * @param unit\r\n         */\r\n        manipulate(value, unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            this[unit] += value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Returns a string format.\r\n         * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n         * for valid templates and locale objects\r\n         * @param template An object. Uses browser defaults otherwise.\r\n         * @param locale A string. Uses browser defaults otherwise. //***\r\n         * @param numberingSystem A string. Uses browser defaults otherwise. //***\r\n         */\r\n        format(template, locale = this.locale, numberingSystem = this.numberingSystem) {\r\n            if (numberingSystem)\r\n                template.numberingSystem = numberingSystem;\r\n            return new Intl.DateTimeFormat(locale, template).format(this);\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is before this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isBefore(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() < compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is after this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isAfter(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() > compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is same this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isSame(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() === compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            compare = DateTime.convert(compare);\r\n            return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n         * @param left\r\n         * @param right\r\n         * @param unit.\r\n         * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n         * If the inclusivity parameter is used, both indicators must be passed.\r\n         */\r\n        isBetween(left, right, unit, inclusivity = '()') {\r\n            if (unit && this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            const leftInclusivity = inclusivity[0] === '(';\r\n            const rightInclusivity = inclusivity[1] === ')';\r\n            return (((leftInclusivity\r\n                ? this.isAfter(left, unit)\r\n                : !this.isBefore(left, unit)) &&\r\n                (rightInclusivity\r\n                    ? this.isBefore(right, unit)\r\n                    : !this.isAfter(right, unit))) ||\r\n                ((leftInclusivity\r\n                    ? this.isBefore(left, unit)\r\n                    : !this.isAfter(left, unit)) &&\r\n                    (rightInclusivity\r\n                        ? this.isAfter(right, unit)\r\n                        : !this.isBefore(right, unit))));\r\n        }\r\n        /**\r\n         * Returns flattened object of the date. Does not include literals\r\n         * @param locale\r\n         * @param template\r\n         */\r\n        parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n            const parts = {};\r\n            new Intl.DateTimeFormat(locale, template)\r\n                .formatToParts(this)\r\n                .filter((x) => x.type !== 'literal')\r\n                .forEach((x) => (parts[x.type] = x.value));\r\n            return parts;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getSeconds()\r\n         */\r\n        get seconds() {\r\n            return this.getSeconds();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setSeconds()\r\n         */\r\n        set seconds(value) {\r\n            this.setSeconds(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get secondsFormatted() {\r\n            return this.format({ second: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMinutes()\r\n         */\r\n        get minutes() {\r\n            return this.getMinutes();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMinutes()\r\n         */\r\n        set minutes(value) {\r\n            this.setMinutes(value);\r\n        }\r\n        /**\r\n         * Returns two digit minutes\r\n         */\r\n        get minutesFormatted() {\r\n            return this.format({ minute: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Shortcut to Date.getHours()\r\n         */\r\n        get hours() {\r\n            return this.getHours();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setHours()\r\n         */\r\n        set hours(value) {\r\n            this.setHours(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get hoursFormatted() {\r\n            return this.format({ hour: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n         */\r\n        get twelveHoursFormatted() {\r\n            return this.format({ hour12: true, hour: \"2-digit\" });\r\n        }\r\n        /**\r\n         * Get the meridiem of the date. E.g. AM or PM.\r\n         * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n         * otherwise it will return AM or PM.\r\n         * @param locale\r\n         */\r\n        meridiem(locale = this.locale) {\r\n            var _a;\r\n            return (_a = new Intl.DateTimeFormat(locale, {\r\n                hour: 'numeric',\r\n                hour12: true,\r\n            })\r\n                .formatToParts(this)\r\n                .find((p) => p.type === 'dayPeriod')) === null || _a === void 0 ? void 0 : _a.value;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDate()\r\n         */\r\n        get date() {\r\n            return this.getDate();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setDate()\r\n         */\r\n        set date(value) {\r\n            this.setDate(value);\r\n        }\r\n        /**\r\n         * Return two digit date\r\n         */\r\n        get dateFormatted() {\r\n            return this.date < 10 ? `0${this.date}` : `${this.date}`;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDay()\r\n         */\r\n        get weekDay() {\r\n            return this.getDay();\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMonth()\r\n         */\r\n        get month() {\r\n            return this.getMonth();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMonth()\r\n         */\r\n        set month(value) {\r\n            this.setMonth(value);\r\n        }\r\n        /**\r\n         * Return two digit, human expected month. E.g. January = 1, December = 12\r\n         */\r\n        get monthFormatted() {\r\n            return this.month + 1 < 10 ? `0${this.month}` : `${this.month}`;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getFullYear()\r\n         */\r\n        get year() {\r\n            return this.getFullYear();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setFullYear()\r\n         */\r\n        set year(value) {\r\n            this.setFullYear(value);\r\n        }\r\n        // borrowed a bunch of stuff from Luxon\r\n        /**\r\n         * Gets the week of the year\r\n         */\r\n        get week() {\r\n            const ordinal = this.computeOrdinal(), weekday = this.getUTCDay();\r\n            let weekNumber = Math.floor((ordinal - weekday + 10) / 7);\r\n            if (weekNumber < 1) {\r\n                weekNumber = this.weeksInWeekYear(this.year - 1);\r\n            }\r\n            else if (weekNumber > this.weeksInWeekYear(this.year)) {\r\n                weekNumber = 1;\r\n            }\r\n            return weekNumber;\r\n        }\r\n        weeksInWeekYear(weekYear) {\r\n            const p1 = (weekYear +\r\n                Math.floor(weekYear / 4) -\r\n                Math.floor(weekYear / 100) +\r\n                Math.floor(weekYear / 400)) %\r\n                7, last = weekYear - 1, p2 = (last +\r\n                Math.floor(last / 4) -\r\n                Math.floor(last / 100) +\r\n                Math.floor(last / 400)) %\r\n                7;\r\n            return p1 === 4 || p2 === 3 ? 53 : 52;\r\n        }\r\n        get isLeapYear() {\r\n            return this.year % 4 === 0 && (this.year % 100 !== 0 || this.year % 400 === 0);\r\n        }\r\n        computeOrdinal() {\r\n            return this.date + (this.isLeapYear ? this.leapLadder : this.nonLeapLadder)[this.month];\r\n        }\r\n    }\n\n    class TdError extends Error {\r\n    }\r\n    class ErrorMessages {\r\n        constructor() {\r\n            this.base = 'TD:';\r\n            //#endregion\r\n            //#region used with notify.error\r\n            /**\r\n             * Used with an Error Event type if the user selects a date that\r\n             * fails restriction validation.\r\n             */\r\n            this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n            /**\r\n             * Used with an Error Event type when a user changes the value of the\r\n             * input field directly, and does not provide a valid date.\r\n             */\r\n            this.failedToParseInput = 'Failed parse input field';\r\n            //#endregion\r\n        }\r\n        //#region out to console\r\n        /**\r\n         * Throws an error indicating that a key in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOption(optionName) {\r\n            const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error indicating that one more keys in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOptions(optionName) {\r\n            const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option is provide an unsupported value.\r\n         * For example a value of 'cheese' for toolbarPlacement which only supports\r\n         * 'top', 'bottom', 'default'.\r\n         * @param optionName\r\n         * @param badValue\r\n         * @param validOptions\r\n         */\r\n        unexpectedOptionValue(optionName, badValue, validOptions) {\r\n            const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n            error.code = 2;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is the wrong type.\r\n         * For example a string value was provided to multipleDates which only\r\n         * supports true or false.\r\n         * @param optionName\r\n         * @param badType\r\n         * @param expectedType\r\n         */\r\n        typeMismatch(optionName, badType, expectedType) {\r\n            const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n            error.code = 3;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is  outside of the expected range.\r\n         * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n         * @param optionName\r\n         * @param lower\r\n         * @param upper\r\n         */\r\n        numbersOutOfRage(optionName, lower, upper) {\r\n            const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n            error.code = 4;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when a value for a date options couldn't be parsed. Either\r\n         * the option was an invalide string or an invalid Date object.\r\n         * @param optionName\r\n         * @param date\r\n         * @param soft If true, logs a warning instead of an error.\r\n         */\r\n        failedToParseDate(optionName, date, soft = false) {\r\n            const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n            error.code = 5;\r\n            if (!soft)\r\n                throw error;\r\n            console.warn(error);\r\n        }\r\n        /**\r\n         * Throws when an element to attach to was not provided in the constructor.\r\n         */\r\n        mustProvideElement() {\r\n            const error = new TdError(`${this.base} No element was provided.`);\r\n            error.code = 6;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if providing an array for the events to subscribe method doesn't have\r\n         * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n         */\r\n        subscribeMismatch() {\r\n            const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n            error.code = 7;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n         */\r\n        conflictingConfiguration(message) {\r\n            const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n            error.code = 8;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Logs a warning if a date option value is provided as a string, instead of\r\n         * a date/datetime object.\r\n         */\r\n        dateString() {\r\n            console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string.`);\r\n        }\r\n    }\n\n    //this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n    const NAME = 'tempus-dominus', version = '6.0.0-alpha1', dataKey = 'td';\r\n    /**\r\n     * Events\r\n     */\r\n    class Events {\r\n        constructor() {\r\n            this.key = `.${dataKey}`;\r\n            /**\r\n             * Change event. Fired when the user selects a date.\r\n             * See also EventTypes.ChangeEvent\r\n             */\r\n            this.change = `change${this.key}`;\r\n            /**\r\n             * Emit when the view changes for example from month view to the year view.\r\n             * See also EventTypes.ViewUpdateEvent\r\n             */\r\n            this.update = `update${this.key}`;\r\n            /**\r\n             * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n             * See also EventTypes.FailEvent\r\n             */\r\n            this.error = `error${this.key}`;\r\n            /**\r\n             * Show event\r\n             * @event Events#show\r\n             */\r\n            this.show = `show${this.key}`;\r\n            /**\r\n             * Hide event\r\n             * @event Events#hide\r\n             */\r\n            this.hide = `hide${this.key}`;\r\n            // blur and focus are used in the jQuery provider but are otherwise unused.\r\n            // keyup/down will be used later for keybinding options\r\n            this.blur = `blur${this.key}`;\r\n            this.focus = `focus${this.key}`;\r\n            this.keyup = `keyup${this.key}`;\r\n            this.keydown = `keydown${this.key}`;\r\n        }\r\n    }\r\n    class Css {\r\n        constructor() {\r\n            /**\r\n             * The outer element for the widget.\r\n             */\r\n            this.widget = `${NAME}-widget`;\r\n            /**\r\n             * Hold the previous, next and switcher divs\r\n             */\r\n            this.calendarHeader = 'calendar-header';\r\n            /**\r\n             * The element for the action to change the calendar view. E.g. month -> year.\r\n             */\r\n            this.switch = 'picker-switch';\r\n            /**\r\n             * The elements for all of the toolbar options\r\n             */\r\n            this.toolbar = 'toolbar';\r\n            /**\r\n             * Disables the hover and rounding affect.\r\n             */\r\n            this.noHighlight = 'no-highlight';\r\n            /**\r\n             * Applied to the widget element when the side by side option is in use.\r\n             */\r\n            this.sideBySide = 'timepicker-sbs';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> July\r\n             */\r\n            this.previous = 'previous';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> September\r\n             */\r\n            this.next = 'next';\r\n            /**\r\n             * Applied to any action that would violate any restriction options. ALso applied\r\n             * to an input field if the disabled function is called.\r\n             */\r\n            this.disabled = 'disabled';\r\n            /**\r\n             * Applied to any date that is less than requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.old = 'old';\r\n            /**\r\n             * Applied to any date that is greater than of requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.new = 'new';\r\n            /**\r\n             * Applied to any date that is currently selected.\r\n             */\r\n            this.active = 'active';\r\n            //#region date element\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.dateContainer = 'date-container';\r\n            /**\r\n             * The outer most element for the decades view.\r\n             */\r\n            this.decadesContainer = `${this.dateContainer}-decades`;\r\n            /**\r\n             * Applied to elements within the decades container, e.g. 2020, 2030\r\n             */\r\n            this.decade = 'decade';\r\n            /**\r\n             * The outer most element for the years view.\r\n             */\r\n            this.yearsContainer = `${this.dateContainer}-years`;\r\n            /**\r\n             * Applied to elements within the years container, e.g. 2021, 2021\r\n             */\r\n            this.year = 'year';\r\n            /**\r\n             * The outer most element for the month view.\r\n             */\r\n            this.monthsContainer = `${this.dateContainer}-months`;\r\n            /**\r\n             * Applied to elements within the month container, e.g. January, February\r\n             */\r\n            this.month = 'month';\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.daysContainer = `${this.dateContainer}-days`;\r\n            /**\r\n             * Applied to elements within the day container, e.g. 1, 2..31\r\n             */\r\n            this.day = 'day';\r\n            /**\r\n             * If display.calendarWeeks is enabled, a column displaying the week of year\r\n             * is shown. This class is applied to each cell in that column.\r\n             */\r\n            this.calendarWeeks = 'cw';\r\n            /**\r\n             * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n             */\r\n            this.dayOfTheWeek = 'dow';\r\n            /**\r\n             * Applied to the current date on the calendar view.\r\n             */\r\n            this.today = 'today';\r\n            /**\r\n             * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n             */\r\n            this.weekend = 'weekend';\r\n            //#endregion\r\n            //#region time element\r\n            /**\r\n             * The outer most element for all time related elements.\r\n             */\r\n            this.timeContainer = 'time-container';\r\n            /**\r\n             * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n             */\r\n            this.separator = 'separator';\r\n            /**\r\n             * The outer most element for the clock view.\r\n             */\r\n            this.clockContainer = `${this.timeContainer}-clock`;\r\n            /**\r\n             * The outer most element for the hours selection view.\r\n             */\r\n            this.hourContainer = `${this.timeContainer}-hour`;\r\n            /**\r\n             * The outer most element for the minutes selection view.\r\n             */\r\n            this.minuteContainer = `${this.timeContainer}-minute`;\r\n            /**\r\n             * The outer most element for the seconds selection view.\r\n             */\r\n            this.secondContainer = `${this.timeContainer}-second`;\r\n            /**\r\n             * Applied to each element in the hours selection view.\r\n             */\r\n            this.hour = 'hour';\r\n            /**\r\n             * Applied to each element in the minutes selection view.\r\n             */\r\n            this.minute = 'minute';\r\n            /**\r\n             * Applied to each element in the seconds selection view.\r\n             */\r\n            this.second = 'second';\r\n            /**\r\n             * Applied AM/PM toggle button.\r\n             */\r\n            this.toggleMeridiem = 'toggleMeridiem';\r\n            //#endregion\r\n            //#region collapse\r\n            /**\r\n             * Applied the element of the current view mode, e.g. calendar or clock.\r\n             */\r\n            this.show = 'show';\r\n            /**\r\n             * Applied to the currently showing view mode during a transition\r\n             * between calendar and clock views\r\n             */\r\n            this.collapsing = 'td-collapsing';\r\n            /**\r\n             * Applied to the currently hidden view mode.\r\n             */\r\n            this.collapse = 'td-collapse';\r\n            //#endregion\r\n            /**\r\n             * Applied to the widget when the option display.inline is enabled.\r\n             */\r\n            this.inline = 'inline';\r\n        }\r\n    }\r\n    class Namespace {\r\n    }\r\n    Namespace.NAME = NAME;\r\n    // noinspection JSUnusedGlobalSymbols\r\n    Namespace.version = version;\r\n    Namespace.dataKey = dataKey;\r\n    Namespace.events = new Events();\r\n    Namespace.css = new Css();\r\n    Namespace.errorMessages = new ErrorMessages();\n\n    const DefaultOptions = {\r\n        restrictions: {\r\n            minDate: undefined,\r\n            maxDate: undefined,\r\n            disabledDates: [],\r\n            enabledDates: [],\r\n            daysOfWeekDisabled: [],\r\n            disabledTimeIntervals: [],\r\n            disabledHours: [],\r\n            enabledHours: [],\r\n        },\r\n        display: {\r\n            icons: {\r\n                type: 'icons',\r\n                time: 'fas fa-clock',\r\n                date: 'fas fa-calendar',\r\n                up: 'fas fa-arrow-up',\r\n                down: 'fas fa-arrow-down',\r\n                previous: 'fas fa-chevron-left',\r\n                next: 'fas fa-chevron-right',\r\n                today: 'fas fa-calendar-check',\r\n                clear: 'fas fa-trash',\r\n                close: 'fas fa-times',\r\n            },\r\n            sideBySide: false,\r\n            calendarWeeks: false,\r\n            viewMode: 'calendar',\r\n            toolbarPlacement: 'bottom',\r\n            keepOpen: false,\r\n            buttons: {\r\n                today: false,\r\n                clear: false,\r\n                close: false,\r\n            },\r\n            components: {\r\n                calendar: true,\r\n                date: true,\r\n                month: true,\r\n                year: true,\r\n                decades: true,\r\n                clock: true,\r\n                hours: true,\r\n                minutes: true,\r\n                seconds: false,\r\n                useTwentyfourHour: false,\r\n            },\r\n            inline: false,\r\n        },\r\n        stepping: 1,\r\n        useCurrent: true,\r\n        defaultDate: undefined,\r\n        localization: {\r\n            today: 'Go to today',\r\n            clear: 'Clear selection',\r\n            close: 'Close the picker',\r\n            selectMonth: 'Select Month',\r\n            previousMonth: 'Previous Month',\r\n            nextMonth: 'Next Month',\r\n            selectYear: 'Select Year',\r\n            previousYear: 'Previous Year',\r\n            nextYear: 'Next Year',\r\n            selectDecade: 'Select Decade',\r\n            previousDecade: 'Previous Decade',\r\n            nextDecade: 'Next Decade',\r\n            previousCentury: 'Previous Century',\r\n            nextCentury: 'Next Century',\r\n            pickHour: 'Pick Hour',\r\n            incrementHour: 'Increment Hour',\r\n            decrementHour: 'Decrement Hour',\r\n            pickMinute: 'Pick Minute',\r\n            incrementMinute: 'Increment Minute',\r\n            decrementMinute: 'Decrement Minute',\r\n            pickSecond: 'Pick Second',\r\n            incrementSecond: 'Increment Second',\r\n            decrementSecond: 'Decrement Second',\r\n            toggleMeridiem: 'Toggle Meridiem',\r\n            selectTime: 'Select Time',\r\n            selectDate: 'Select Date',\r\n            dayViewHeaderFormat: { month: 'long', year: '2-digit' },\r\n            locale: 'default',\r\n            startOfTheWeek: 0,\r\n        },\r\n        keepInvalid: false,\r\n        debug: false,\r\n        allowInputToggle: false,\r\n        viewDate: new DateTime(),\r\n        multipleDates: false,\r\n        multipleDatesSeparator: '; ',\r\n        promptTimeOnDateChange: false,\r\n        promptTimeOnDateChangeTransitionDelay: 200,\r\n        hooks: {\r\n            inputParse: undefined,\r\n            inputFormat: undefined,\r\n        },\r\n        meta: {\r\n            format: '',\r\n            numberingSystem: '' //***\r\n        },\r\n    };\r\n    const DatePickerModes = [\r\n        {\r\n            name: 'calendar',\r\n            className: Namespace.css.daysContainer,\r\n            unit: Unit.month,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'months',\r\n            className: Namespace.css.monthsContainer,\r\n            unit: Unit.year,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'years',\r\n            className: Namespace.css.yearsContainer,\r\n            unit: Unit.year,\r\n            step: 10,\r\n        },\r\n        {\r\n            name: 'decades',\r\n            className: Namespace.css.decadesContainer,\r\n            unit: Unit.year,\r\n            step: 100,\r\n        },\r\n    ];\n\n    /**\r\n     * Provides a collapse functionality to the view changes\r\n     */\r\n    class Collapse {\r\n        /**\r\n         * Flips the show/hide state of `target`\r\n         * @param target html element to affect.\r\n         */\r\n        static toggle(target) {\r\n            if (target.classList.contains(Namespace.css.show)) {\r\n                this.hide(target);\r\n            }\r\n            else {\r\n                this.show(target);\r\n            }\r\n        }\r\n        /**\r\n         * If `target` is not already showing, then show after the animation.\r\n         * @param target\r\n         */\r\n        static show(target) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n                target.style.height = '';\r\n            };\r\n            target.style.height = '0';\r\n            target.classList.remove(Namespace.css.collapse);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n            target.style.height = `${target.scrollHeight}px`;\r\n        }\r\n        /**\r\n         * If `target` is not already hidden, then hide after the animation.\r\n         * @param target HTML Element\r\n         */\r\n        static hide(target) {\r\n            if (target.classList.contains(Namespace.css.collapsing) ||\r\n                !target.classList.contains(Namespace.css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.css.collapsing);\r\n                target.classList.add(Namespace.css.collapse);\r\n            };\r\n            target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n            const reflow = (element) => element.offsetHeight;\r\n            reflow(target);\r\n            target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n            target.classList.add(Namespace.css.collapsing);\r\n            target.style.height = '';\r\n            setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n        }\r\n    }\r\n    /**\r\n     * Gets the transition duration from the `element` by getting css properties\r\n     * `transition-duration` and `transition-delay`\r\n     * @param element HTML Element\r\n     */\r\n    Collapse.getTransitionDurationFromElement = (element) => {\r\n        if (!element) {\r\n            return 0;\r\n        }\r\n        // Get transition-duration of the element\r\n        let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n        const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n        const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n        // Return 0 if element or transition duration is not found\r\n        if (!floatTransitionDuration && !floatTransitionDelay) {\r\n            return 0;\r\n        }\r\n        // If multiple durations are defined, take the first\r\n        transitionDuration = transitionDuration.split(',')[0];\r\n        transitionDelay = transitionDelay.split(',')[0];\r\n        return ((Number.parseFloat(transitionDuration) +\r\n            Number.parseFloat(transitionDelay)) *\r\n            1000);\r\n    };\n\n    /**\r\n     *\r\n     */\r\n    class Actions {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Performs the selected `action`. See ActionTypes\r\n         * @param e This is normally a click event\r\n         * @param action If not provided, then look for a [data-action]\r\n         */\r\n        do(e, action) {\r\n            var _a, _b, _c;\r\n            const currentTarget = e === null || e === void 0 ? void 0 : e.currentTarget;\r\n            if ((_a = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.classList) === null || _a === void 0 ? void 0 : _a.contains(Namespace.css.disabled))\r\n                return false;\r\n            action = action || ((_b = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.dataset) === null || _b === void 0 ? void 0 : _b.action);\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            /**\r\n             * Common function to manipulate {@link lastPicked} by `unit`.\r\n             * @param unit\r\n             * @param value Value to change by\r\n             */\r\n            const manipulateAndSet = (unit, value = 1) => {\r\n                const newDate = lastPicked.manipulate(value, unit);\r\n                if (this._context._validation.isValid(newDate, unit)) {\r\n                    this._context.dates._setValue(newDate, this._context.dates.lastPickedIndex);\r\n                }\r\n            };\r\n            /**\r\n             * Common function to manipulate {@link lastPicked} by `unit`.\r\n             * After setting the value it will either show the clock or hide the widget.\r\n             * @param unit\r\n             * @param value Value to change by\r\n             */\r\n            const hideOrClock = () => {\r\n                if (this._context._options.display.components.useTwentyfourHour &&\r\n                    !this._context._options.display.components.minutes &&\r\n                    !this._context._options.display.keepOpen &&\r\n                    !this._context._options.display.inline) {\r\n                    this._context._display.hide();\r\n                }\r\n                else {\r\n                    this.do(e, ActionTypes.showClock);\r\n                }\r\n            };\r\n            switch (action) {\r\n                case ActionTypes.next:\r\n                case ActionTypes.previous:\r\n                    const { unit, step } = DatePickerModes[this._context._currentViewMode];\r\n                    if (action === ActionTypes.next)\r\n                        this._context._viewDate.manipulate(step, unit);\r\n                    else\r\n                        this._context._viewDate.manipulate(step * -1, unit);\r\n                    this._context._viewUpdate(unit);\r\n                    this._context._display._showMode();\r\n                    break;\r\n                case ActionTypes.pickerSwitch:\r\n                    this._context._display._showMode(1);\r\n                    this._context._viewUpdate(DatePickerModes[this._context._currentViewMode].unit);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.selectMonth:\r\n                case ActionTypes.selectYear:\r\n                case ActionTypes.selectDecade:\r\n                    const value = +currentTarget.dataset.value;\r\n                    switch (action) {\r\n                        case ActionTypes.selectMonth:\r\n                            this._context._viewDate.month = value;\r\n                            this._context._viewUpdate(Unit.month);\r\n                            break;\r\n                        case ActionTypes.selectYear:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                        case ActionTypes.selectDecade:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                    }\r\n                    if (this._context._currentViewMode === this._context._minViewModeNumber) {\r\n                        this._context.dates._setValue(this._context._viewDate, this._context.dates.lastPickedIndex);\r\n                        if (!this._context._options.display.inline) {\r\n                            this._context._display.hide();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context._display._showMode(-1);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectDay:\r\n                    const day = this._context._viewDate.clone;\r\n                    if (currentTarget.classList.contains(Namespace.css.old)) {\r\n                        day.manipulate(-1, Unit.month);\r\n                    }\r\n                    if (currentTarget.classList.contains(Namespace.css.new)) {\r\n                        day.manipulate(1, Unit.month);\r\n                    }\r\n                    day.date = +currentTarget.dataset.day;\r\n                    let index = 0;\r\n                    if (this._context._options.multipleDates) {\r\n                        index = this._context.dates.pickedIndex(day, Unit.date);\r\n                        if (index !== -1) {\r\n                            this._context.dates._setValue(null, index); //deselect multi-date\r\n                        }\r\n                        else {\r\n                            this._context.dates._setValue(day, this._context.dates.lastPickedIndex + 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context.dates._setValue(day, this._context.dates.lastPickedIndex);\r\n                    }\r\n                    if (!this._context._display._hasTime &&\r\n                        !this._context._options.display.keepOpen &&\r\n                        !this._context._options.display.inline &&\r\n                        !this._context._options.multipleDates) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectHour:\r\n                    let hour = +currentTarget.dataset.value;\r\n                    if (lastPicked.hours >= 12 &&\r\n                        !this._context._options.display.components.useTwentyfourHour)\r\n                        hour += 12;\r\n                    lastPicked.hours = hour;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    hideOrClock();\r\n                    break;\r\n                case ActionTypes.selectMinute:\r\n                    lastPicked.minutes = +currentTarget.dataset.value;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    hideOrClock();\r\n                    break;\r\n                case ActionTypes.selectSecond:\r\n                    lastPicked.seconds = +currentTarget.dataset.value;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    hideOrClock();\r\n                    break;\r\n                case ActionTypes.incrementHours:\r\n                    manipulateAndSet(Unit.hours);\r\n                    break;\r\n                case ActionTypes.incrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping);\r\n                    break;\r\n                case ActionTypes.incrementSeconds:\r\n                    manipulateAndSet(Unit.seconds);\r\n                    break;\r\n                case ActionTypes.decrementHours:\r\n                    manipulateAndSet(Unit.hours, -1);\r\n                    break;\r\n                case ActionTypes.decrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping * -1);\r\n                    break;\r\n                case ActionTypes.decrementSeconds:\r\n                    manipulateAndSet(Unit.seconds, -1);\r\n                    break;\r\n                case ActionTypes.toggleMeridiem:\r\n                    manipulateAndSet(Unit.hours, ((_c = this._context.dates.lastPicked) === null || _c === void 0 ? void 0 : _c.hours) >= 12 ? -12 : 12 //***\r\n                    );\r\n                    break;\r\n                case ActionTypes.togglePicker:\r\n                    if (currentTarget.getAttribute('title') ===\r\n                        this._context._options.localization.selectDate) {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectTime);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.time).outerHTML;\r\n                        this._context._display._updateCalendarHeader();\r\n                    }\r\n                    else {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectDate);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.date).outerHTML;\r\n                        if (this._context._display._hasTime) {\r\n                            this.do(e, ActionTypes.showClock);\r\n                            this._context._display._update('clock');\r\n                        }\r\n                    }\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n                        .forEach((htmlElement) => Collapse.toggle(htmlElement));\r\n                    break;\r\n                case ActionTypes.showClock:\r\n                case ActionTypes.showHours:\r\n                case ActionTypes.showMinutes:\r\n                case ActionTypes.showSeconds:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n                        .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n                    let classToUse = '';\r\n                    switch (action) {\r\n                        case ActionTypes.showClock:\r\n                            classToUse = Namespace.css.clockContainer;\r\n                            this._context._display._update('clock');\r\n                            break;\r\n                        case ActionTypes.showHours:\r\n                            classToUse = Namespace.css.hourContainer;\r\n                            this._context._display._update(Unit.hours);\r\n                            break;\r\n                        case ActionTypes.showMinutes:\r\n                            classToUse = Namespace.css.minuteContainer;\r\n                            this._context._display._update(Unit.minutes);\r\n                            break;\r\n                        case ActionTypes.showSeconds:\r\n                            classToUse = Namespace.css.secondContainer;\r\n                            this._context._display._update(Unit.seconds);\r\n                            break;\r\n                    }\r\n                    (this._context._display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n                    break;\r\n                case ActionTypes.clear:\r\n                    this._context.dates._setValue(null);\r\n                    this._context._display._updateCalendarHeader();\r\n                    break;\r\n                case ActionTypes.close:\r\n                    this._context._display.hide();\r\n                    break;\r\n                case ActionTypes.today:\r\n                    const today = new DateTime().setLocale(this._context._options.localization.locale, this._context._options.meta.numberingSystem); //***\r\n                    this._context._viewDate = today;\r\n                    if (this._context._validation.isValid(today, Unit.date))\r\n                        this._context.dates._setValue(today, this._context.dates.lastPickedIndex);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    var ActionTypes;\r\n    (function (ActionTypes) {\r\n        ActionTypes[\"next\"] = \"next\";\r\n        ActionTypes[\"previous\"] = \"previous\";\r\n        ActionTypes[\"pickerSwitch\"] = \"pickerSwitch\";\r\n        ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n        ActionTypes[\"selectYear\"] = \"selectYear\";\r\n        ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n        ActionTypes[\"selectDay\"] = \"selectDay\";\r\n        ActionTypes[\"selectHour\"] = \"selectHour\";\r\n        ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n        ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n        ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n        ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n        ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n        ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n        ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n        ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n        ActionTypes[\"toggleMeridiem\"] = \"toggleMeridiem\";\r\n        ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n        ActionTypes[\"showClock\"] = \"showClock\";\r\n        ActionTypes[\"showHours\"] = \"showHours\";\r\n        ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n        ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n        ActionTypes[\"clear\"] = \"clear\";\r\n        ActionTypes[\"close\"] = \"close\";\r\n        ActionTypes[\"today\"] = \"today\";\r\n    })(ActionTypes || (ActionTypes = {}));\n\n    /**\r\n     * Creates and updates the grid for `date`\r\n     */\r\n    class DateDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.daysContainer);\r\n            container.append(...this._daysOfTheWeek());\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const div = document.createElement('div');\r\n                div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                container.appendChild(div);\r\n            }\r\n            for (let i = 0; i < 42; i++) {\r\n                if (i !== 0 && i % 7 === 0) {\r\n                    if (this._context._options.display.calendarWeeks) {\r\n                        const div = document.createElement('div');\r\n                        div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                        container.appendChild(div);\r\n                    }\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDay);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.daysContainer, this._context._viewDate.format(this._context._options.localization.dayViewHeaderFormat));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.month)\r\n                .startOf('weekDay', this._context._options.localization.startOfTheWeek)\r\n                .manipulate(12, Unit.hours);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDay}\"], .${Namespace.css.calendarWeeks}`)\r\n                .forEach((containerClone, index) => {\r\n                if (this._context._options.display.calendarWeeks &&\r\n                    containerClone.classList.contains(Namespace.css.calendarWeeks)) {\r\n                    if (containerClone.innerText === '#')\r\n                        return;\r\n                    containerClone.innerText = `${innerDate.week}`;\r\n                    return;\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.day);\r\n                if (innerDate.isBefore(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.old);\r\n                }\r\n                if (innerDate.isAfter(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.css.new);\r\n                }\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                    classes.push(Namespace.css.today);\r\n                }\r\n                if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                    classes.push(Namespace.css.weekend);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n                containerClone.setAttribute('data-day', `${innerDate.date}`);\r\n                containerClone.innerText = innerDate.format({ day: 'numeric' });\r\n                innerDate.manipulate(1, Unit.date);\r\n            });\r\n        }\r\n        /***\r\n         * Generates an html row that contains the days of the week.\r\n         * @private\r\n         */\r\n        _daysOfTheWeek() {\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf('weekDay', this._context._options.localization.startOfTheWeek)\r\n                .startOf(Unit.date);\r\n            const row = [];\r\n            document.createElement('div');\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = '#';\r\n                row.push(htmlDivElement);\r\n            }\r\n            for (let i = 0; i < 7; i++) {\r\n                const htmlDivElement = document.createElement('div');\r\n                htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n                htmlDivElement.innerText = innerDate.format({ weekday: 'short' });\r\n                innerDate.manipulate(1, Unit.date);\r\n                row.push(htmlDivElement);\r\n            }\r\n            return row;\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `month`\r\n     */\r\n    class MonthDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.monthsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMonth);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.monthsContainer, this._context._viewDate.format({ year: 'numeric' }));\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMonth}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.month);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${index}`);\r\n                containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n                innerDate.manipulate(1, Unit.month);\r\n            });\r\n        }\r\n    }\n\n    class OptionConverter {\r\n        static _mergeOptions(providedOptions, mergeTo) {\r\n            var _a, _b;\r\n            const newOptions = {};\r\n            let path = '';\r\n            const ignoreProperties = [\r\n                'inputParse',\r\n                'inputFormat',\r\n                'meta',\r\n                'dayViewHeaderFormat',\r\n                'container'\r\n            ];\r\n            //see if the options specify a locale\r\n            const locale = mergeTo.localization.locale !== 'default' ? mergeTo.localization.locale :\r\n                ((_a = providedOptions === null || providedOptions === void 0 ? void 0 : providedOptions.localization) === null || _a === void 0 ? void 0 : _a.locale) || 'default';\r\n            //see if the options specify a numbering system //***\r\n            const numberingSystem = mergeTo.meta.numberingSystem || ((_b = providedOptions === null || providedOptions === void 0 ? void 0 : providedOptions.meta) === null || _b === void 0 ? void 0 : _b.numberingSystem);\r\n            const processKey = (key, value, providedType, defaultType) => {\r\n                switch (key) {\r\n                    case 'defaultDate': {\r\n                        const dateTime = this._dateConversion(value, 'defaultDate');\r\n                        if (dateTime !== undefined) {\r\n                            dateTime.setLocale(locale, numberingSystem); //***\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('defaultDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'viewDate': {\r\n                        const dateTime = this._dateConversion(value, 'viewDate');\r\n                        if (dateTime !== undefined) {\r\n                            dateTime.setLocale(locale, numberingSystem); //***\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('viewDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'minDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.minDate');\r\n                        if (dateTime !== undefined) {\r\n                            dateTime.setLocale(locale, numberingSystem); //***\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.minDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'maxDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.maxDate');\r\n                        if (dateTime !== undefined) {\r\n                            dateTime.setLocale(locale, numberingSystem); //***\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.errorMessages.typeMismatch('restrictions.maxDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'disabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.disabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.disabledHours', 0, 23);\r\n                        return value;\r\n                    case 'enabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.enabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.enabledHours', 0, 23);\r\n                        return value;\r\n                    case 'daysOfWeekDisabled':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.daysOfWeekDisabled', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 6).length > 0)\r\n                            Namespace.errorMessages.numbersOutOfRage('restrictions.daysOfWeekDisabled', 0, 6);\r\n                        return value;\r\n                    case 'enabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.enabledDates', value, providedType, locale, numberingSystem //***\r\n                        );\r\n                        return value;\r\n                    case 'disabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.disabledDates', value, providedType, locale, numberingSystem //***\r\n                        );\r\n                        return value;\r\n                    case 'disabledTimeIntervals':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        if (!Array.isArray(value)) {\r\n                            Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n                        }\r\n                        const valueObject = value;\r\n                        for (let i = 0; i < valueObject.length; i++) {\r\n                            Object.keys(valueObject[i]).forEach((vk) => {\r\n                                const subOptionName = `${key}[${i}].${vk}`;\r\n                                let d = valueObject[i][vk];\r\n                                const dateTime = this._dateConversion(d, subOptionName);\r\n                                if (!dateTime) {\r\n                                    Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                                }\r\n                                dateTime.setLocale(locale, numberingSystem); //***\r\n                                valueObject[i][vk] = dateTime;\r\n                            });\r\n                        }\r\n                        return valueObject;\r\n                    case 'toolbarPlacement':\r\n                    case 'type':\r\n                    case 'viewMode':\r\n                        const optionValues = {\r\n                            toolbarPlacement: ['top', 'bottom', 'default'],\r\n                            type: ['icons', 'sprites'],\r\n                            viewMode: ['clock', 'calendar', 'months', 'years', 'decades'],\r\n                        };\r\n                        const keyOptions = optionValues[key];\r\n                        if (!keyOptions.includes(value))\r\n                            Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n                        return value;\r\n                    case 'inputParse':\r\n                    case 'inputFormat':\r\n                    case 'meta':\r\n                    case 'dayViewHeaderFormat':\r\n                        return value;\r\n                    case 'container':\r\n                        if (value && !(value instanceof HTMLElement || value instanceof Element || (value === null || value === void 0 ? void 0 : value.appendChild))) {\r\n                            Namespace.errorMessages.typeMismatch(path.substring(1), typeof value, 'HTMLElement');\r\n                        }\r\n                        return value;\r\n                    default:\r\n                        switch (defaultType) {\r\n                            case 'boolean':\r\n                                return value === 'true' || value === true;\r\n                            case 'number':\r\n                                return +value;\r\n                            case 'string':\r\n                                return value.toString();\r\n                            case 'object':\r\n                                return {};\r\n                            case 'function':\r\n                                return value;\r\n                            default:\r\n                                Namespace.errorMessages.typeMismatch(path.substring(1), providedType, defaultType);\r\n                        }\r\n                }\r\n            };\r\n            /**\r\n             * The spread operator caused sub keys to be missing after merging.\r\n             * This is to fix that issue by using spread on the child objects first.\r\n             * Also handles complex options like disabledDates\r\n             * @param provided An option from new providedOptions\r\n             * @param mergeOption Default option to compare types against\r\n             * @param copyTo Destination object. This was add to prevent reference copies\r\n             */\r\n            const spread = (provided, mergeOption, copyTo) => {\r\n                const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(mergeOption).includes(x));\r\n                if (unsupportedOptions.length > 0) {\r\n                    const flattenedOptions = OptionConverter._flattenDefaultOptions;\r\n                    const errors = unsupportedOptions.map((x) => {\r\n                        let error = `\"${path.substring(1)}.${x}\" in not a known option.`;\r\n                        let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                        if (didYouMean)\r\n                            error += `Did you mean \"${didYouMean}\"?`;\r\n                        return error;\r\n                    });\r\n                    Namespace.errorMessages.unexpectedOptions(errors);\r\n                }\r\n                Object.keys(mergeOption).forEach((key) => {\r\n                    const defaultOptionValue = mergeOption[key];\r\n                    let providedType = typeof provided[key];\r\n                    let defaultType = typeof defaultOptionValue;\r\n                    let value = provided[key];\r\n                    if (!provided.hasOwnProperty(key)) {\r\n                        if (defaultType === 'undefined' ||\r\n                            ((value === null || value === void 0 ? void 0 : value.length) === 0 && Array.isArray(defaultOptionValue))) {\r\n                            copyTo[key] = defaultOptionValue;\r\n                            return;\r\n                        }\r\n                        provided[key] = defaultOptionValue;\r\n                        value = provided[key];\r\n                    }\r\n                    path += `.${key}`;\r\n                    copyTo[key] = processKey(key, value, providedType, defaultType);\r\n                    if (typeof defaultOptionValue !== 'object' ||\r\n                        ignoreProperties.includes(key)) {\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(provided[key])) {\r\n                        spread(provided[key], defaultOptionValue, copyTo[key]);\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                    }\r\n                    path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                });\r\n            };\r\n            spread(providedOptions, mergeTo, newOptions);\r\n            return newOptions;\r\n        }\r\n        static _dataToOptions(element, options) {\r\n            const eData = element.dataset;\r\n            if (eData === null || eData === void 0 ? void 0 : eData.tdTargetInput)\r\n                delete eData.tdTargetInput;\r\n            if (eData === null || eData === void 0 ? void 0 : eData.tdTargetToggle)\r\n                delete eData.tdTargetToggle;\r\n            if (!eData ||\r\n                Object.keys(eData).length === 0 ||\r\n                eData.constructor !== DOMStringMap)\r\n                return options;\r\n            let dataOptions = {};\r\n            // because dataset returns camelCase including the 'td' key the option\r\n            // key won't align\r\n            const objectToNormalized = (object) => {\r\n                const lowered = {};\r\n                Object.keys(object).forEach((x) => {\r\n                    lowered[x.toLowerCase()] = x;\r\n                });\r\n                return lowered;\r\n            };\r\n            const rabbitHole = (split, index, optionSubgroup, value) => {\r\n                // first round = display { ... }\r\n                const normalizedOptions = objectToNormalized(optionSubgroup);\r\n                const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n                const internalObject = {};\r\n                if (keyOption === undefined)\r\n                    return internalObject;\r\n                // if this is another object, continue down the rabbit hole\r\n                if (optionSubgroup[keyOption].constructor === Object) {\r\n                    index++;\r\n                    internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n                }\r\n                else {\r\n                    internalObject[keyOption] = value;\r\n                }\r\n                return internalObject;\r\n            };\r\n            const optionsLower = objectToNormalized(options);\r\n            Object.keys(eData)\r\n                .filter((x) => x.startsWith(Namespace.dataKey))\r\n                .map((x) => x.substring(2))\r\n                .forEach((key) => {\r\n                let keyOption = optionsLower[key.toLowerCase()];\r\n                // dataset merges dashes to camelCase... yay\r\n                // i.e. key = display_components_seconds\r\n                if (key.includes('_')) {\r\n                    // [display, components, seconds]\r\n                    const split = key.split('_');\r\n                    // display\r\n                    keyOption = optionsLower[split[0].toLowerCase()];\r\n                    if (keyOption !== undefined &&\r\n                        options[keyOption].constructor === Object) {\r\n                        dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                    }\r\n                }\r\n                // or key = multipleDate\r\n                else if (keyOption !== undefined) {\r\n                    dataOptions[keyOption] = eData[`td${key}`];\r\n                }\r\n            });\r\n            return this._mergeOptions(dataOptions, options);\r\n        }\r\n        /**\r\n         * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n         * @param d If a string will attempt creating a date from it.\r\n         * @private\r\n         */\r\n        static _dateTypeCheck(d) {\r\n            if (d.constructor.name === DateTime.name)\r\n                return d;\r\n            if (d.constructor.name === Date.name) {\r\n                return DateTime.convert(d);\r\n            }\r\n            if (typeof d === typeof '') {\r\n                const dateTime = new DateTime(d);\r\n                if (JSON.stringify(dateTime) === 'null') {\r\n                    return null;\r\n                }\r\n                return dateTime;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of Date or DateTime\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckDateArray(optionName, value, providedType, locale = 'default', numberingSystem //***\r\n        ) {\r\n            if (!Array.isArray(value)) {\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n            }\r\n            for (let i = 0; i < value.length; i++) {\r\n                let d = value[i];\r\n                const dateTime = this._dateConversion(d, optionName);\r\n                if (!dateTime) {\r\n                    Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n                }\r\n                dateTime.setLocale(locale, numberingSystem); //***\r\n                value[i] = dateTime;\r\n            }\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of numbers\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckNumberArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value) || value.length && value.find((x) => typeof x !== typeof 0)) { //***\r\n                Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n            }\r\n            return;\r\n        }\r\n        /**\r\n         * Attempts to convert `d` to a DateTime object\r\n         * @param d value to convert\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         */\r\n        static _dateConversion(d, optionName) {\r\n            if (typeof d === typeof '' && optionName !== 'input') {\r\n                Namespace.errorMessages.dateString();\r\n            }\r\n            const converted = this._dateTypeCheck(d);\r\n            if (!converted) {\r\n                Namespace.errorMessages.failedToParseDate(optionName, d, optionName === 'input');\r\n            }\r\n            return converted;\r\n        }\r\n        static get _flattenDefaultOptions() {\r\n            if (this._flatback)\r\n                return this._flatback;\r\n            const deepKeys = (t, pre = []) => Array.isArray(t)\r\n                ? []\r\n                : Object(t) === t\r\n                    ? Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]))\r\n                    : pre.join('.');\r\n            this._flatback = deepKeys(DefaultOptions);\r\n            return this._flatback;\r\n        }\r\n        /**\r\n         * Some options conflict like min/max date. Verify that these kinds of options\r\n         * are set correctly.\r\n         * @param config\r\n         */\r\n        static _validateConflcits(config) {\r\n            if (config.display.sideBySide && (!config.display.components.clock ||\r\n                !(config.display.components.hours ||\r\n                    config.display.components.minutes ||\r\n                    config.display.components.seconds))) {\r\n                Namespace.errorMessages.conflictingConfiguration('Cannot use side by side mode without the clock components');\r\n            }\r\n            if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n                if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n                }\r\n                if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                    Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n                }\r\n            }\r\n        }\r\n    }\n\n    class Dates {\r\n        constructor(context) {\r\n            this._dates = [];\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Returns the array of selected dates\r\n         */\r\n        get picked() {\r\n            return this._dates;\r\n        }\r\n        /**\r\n         * Returns the last picked value.\r\n         */\r\n        get lastPicked() {\r\n            return this._dates[this.lastPickedIndex];\r\n        }\r\n        /**\r\n         * Returns the length of picked dates -1 or 0 if none are selected.\r\n         */\r\n        get lastPickedIndex() {\r\n            if (this._dates.length === 0)\r\n                return 0;\r\n            return this._dates.length - 1;\r\n        }\r\n        /**\r\n         * Adds a new DateTime to selected dates array\r\n         * @param date\r\n         */\r\n        add(date) {\r\n            this._dates.push(date);\r\n        }\r\n        /**\r\n         * Tries to convert the provided value to a DateTime object.\r\n         * If value is null|undefined then clear the value of the provided index (or 0).\r\n         * @param value Value to convert or null|undefined\r\n         * @param index When using multidates this is the index in the array\r\n         * @param from Used in the warning message, useful for debugging.\r\n         */\r\n        set(value, index, from = 'date.set') {\r\n            if (!value)\r\n                this._setValue(value, index);\r\n            const converted = OptionConverter._dateConversion(value, from);\r\n            if (converted) {\r\n                converted.setLocale(this._context._options.localization.locale, this._context._options.meta.numberingSystem); //***\r\n                this._setValue(converted, index);\r\n            }\r\n        }\r\n        /**\r\n         * Returns true if the `targetDate` is part of the selected dates array.\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        isPicked(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.find((x) => x === targetDate) !== undefined;\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return (this._dates\r\n                .map((x) => x.format(format))\r\n                .find((x) => x === innerDateFormatted) !== undefined);\r\n        }\r\n        /**\r\n         * Returns the index at which `targetDate` is in the array.\r\n         * This is used for updating or removing a date when multi-date is used\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        pickedIndex(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.indexOf(targetDate);\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n        }\r\n        /**\r\n         * Clears all selected dates.\r\n         */\r\n        clear() {\r\n            this._context._unset = true;\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.change,\r\n                date: undefined,\r\n                oldDate: this.lastPicked,\r\n                isClear: true,\r\n                isValid: true,\r\n            });\r\n            this._dates = [];\r\n        }\r\n        /**\r\n         * Find the \"book end\" years given a `year` and a `factor`\r\n         * @param factor e.g. 100 for decades\r\n         * @param year e.g. 2021\r\n         */\r\n        static getStartEndYear(factor, year) {\r\n            const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n            return [startYear, endYear, focusValue];\r\n        }\r\n        /**\r\n         * Do not use direectly. Attempts to either clear or set the `target` date at `index`.\r\n         * If the `target` is null then the date will be cleared.\r\n         * If multi-date is being used then it will be removed from the array.\r\n         * If `target` is valid and multi-date is used then if `index` is\r\n         * provided the date at that index will be replaced, otherwise it is appended.\r\n         * @param target\r\n         * @param index\r\n         */\r\n        _setValue(target, index) {\r\n            const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n            let oldDate = this._context._unset ? null : this._dates[index];\r\n            if (!oldDate && !this._context._unset && noIndex && isClear) {\r\n                oldDate = this.lastPicked;\r\n            }\r\n            const updateInput = () => {\r\n                if (!this._context._input)\r\n                    return;\r\n                let newValue = this._context._options.hooks.inputFormat(this._context, target);\r\n                if (this._context._options.multipleDates) {\r\n                    newValue = this._dates\r\n                        .map((d) => this._context._options.hooks.inputFormat(this._context, d))\r\n                        .join(this._context._options.multipleDatesSeparator);\r\n                }\r\n                if (this._context._input.value != newValue)\r\n                    this._context._input.value = newValue;\r\n            };\r\n            if (target && (oldDate === null || oldDate === void 0 ? void 0 : oldDate.isSame(target))) {\r\n                updateInput();\r\n                return;\r\n            }\r\n            // case of calling setValue(null)\r\n            if (!target) {\r\n                if (!this._context._options.multipleDates ||\r\n                    this._dates.length === 1 ||\r\n                    isClear) {\r\n                    this._context._unset = true;\r\n                    this._dates = [];\r\n                }\r\n                else {\r\n                    this._dates.splice(index, 1);\r\n                }\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: undefined,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                updateInput();\r\n                this._context._display._update('all');\r\n                return;\r\n            }\r\n            index = index || 0;\r\n            target = target.clone;\r\n            // minute stepping is being used, force the minute to the closest value\r\n            if (this._context._options.stepping !== 1) {\r\n                target.minutes =\r\n                    Math.round(target.minutes / this._context._options.stepping) *\r\n                        this._context._options.stepping;\r\n                target.seconds = 0;\r\n            }\r\n            if (this._context._validation.isValid(target)) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._unset = false;\r\n                this._context._display._update('all');\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                return;\r\n            }\r\n            if (this._context._options.keepInvalid) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: false,\r\n                });\r\n            }\r\n            this._context._triggerEvent({\r\n                type: Namespace.events.error,\r\n                reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n                date: target,\r\n                oldDate,\r\n            });\r\n        }\r\n        /**\r\n         * Returns a format object based on the granularity of `unit`\r\n         * @param unit\r\n         */\r\n        static getFormatByUnit(unit) {\r\n            switch (unit) {\r\n                case 'date':\r\n                    return { dateStyle: 'short' };\r\n                case 'month':\r\n                    return {\r\n                        month: 'numeric',\r\n                        year: 'numeric',\r\n                    };\r\n                case 'year':\r\n                    return { year: 'numeric' };\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `year`\r\n     */\r\n    class YearDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.yearsContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectYear);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            Dates.getStartEndYear(10, this._context._viewDate.year);\r\n            this._startYear = this._context._viewDate.clone.manipulate(-1, Unit.year);\r\n            this._endYear = this._context._viewDate.clone.manipulate(10, Unit.year);\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: 'numeric' })}-${this._endYear.format({ year: 'numeric' })}`);\r\n            this._context._validation.isValid(this._startYear, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endYear, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.year)\r\n                .manipulate(-1, Unit.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectYear}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.year);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}`);\r\n                containerClone.innerText = innerDate.format({ year: \"numeric\" });\r\n                innerDate.manipulate(1, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class DecadeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.decadesContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDecade);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const [start, end] = Dates.getStartEndYear(100, this._context._viewDate.year);\r\n            this._startDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._startDecade.year = start;\r\n            this._endDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._endDecade.year = end;\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n            const [previous, switcher, next] = container.parentElement\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({ year: 'numeric' })}-${this._endDecade.format({ year: 'numeric' })}`);\r\n            this._context._validation.isValid(this._startDecade, Unit.year)\r\n                ? previous.classList.remove(Namespace.css.disabled)\r\n                : previous.classList.add(Namespace.css.disabled);\r\n            this._context._validation.isValid(this._endDecade, Unit.year)\r\n                ? next.classList.remove(Namespace.css.disabled)\r\n                : next.classList.add(Namespace.css.disabled);\r\n            const pickedYears = this._context.dates.picked.map((x) => x.year);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectDecade}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                if (index === 0) {\r\n                    containerClone.classList.add(Namespace.css.old);\r\n                    if (this._startDecade.year - 10 < 0) {\r\n                        containerClone.textContent = ' ';\r\n                        previous.classList.add(Namespace.css.disabled);\r\n                        containerClone.classList.add(Namespace.css.disabled);\r\n                        containerClone.setAttribute('data-value', ``);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: 'numeric' });\r\n                        containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                        return;\r\n                    }\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.css.decade);\r\n                const startDecadeYear = this._startDecade.year;\r\n                const endDecadeYear = this._startDecade.year + 9;\r\n                if (!this._context._unset &&\r\n                    pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                        .length > 0) {\r\n                    classes.push(Namespace.css.active);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${this._startDecade.year}`);\r\n                containerClone.innerText = `${this._startDecade.format({ year: 'numeric' })}`;\r\n                this._startDecade.manipulate(10, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates the clock display\r\n     */\r\n    class TimeDisplay {\r\n        constructor(context) {\r\n            this._gridColumns = '';\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the clock display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.clockContainer);\r\n            container.append(...this._grid());\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the various elements with in the clock display\r\n         * like the current hour and if the manipulation icons are enabled.\r\n         * @private\r\n         */\r\n        _update() {\r\n            if (!this._context._display._hasTime)\r\n                return;\r\n            const timesDiv = (this._context._display.widget.getElementsByClassName(Namespace.css.clockContainer)[0]);\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            timesDiv\r\n                .querySelectorAll('.disabled')\r\n                .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n            if (this._context._options.display.components.hours) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementHours}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this._context._options.display.components.useTwentyfourHour\r\n                    ? lastPicked.hoursFormatted\r\n                    : lastPicked.twelveHoursFormatted;\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementMinutes}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementSeconds}]`)\r\n                        .classList.add(Namespace.css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                const toggle = timesDiv.querySelector(`[data-action=${ActionTypes.toggleMeridiem}]`);\r\n                toggle.innerText = lastPicked.meridiem();\r\n                if (!this._context._validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                    toggle.classList.add(Namespace.css.disabled);\r\n                }\r\n                else {\r\n                    toggle.classList.remove(Namespace.css.disabled);\r\n                }\r\n            }\r\n            timesDiv.style.gridTemplateAreas = `\"${this._gridColumns}\"`;\r\n        }\r\n        /**\r\n         * Creates the table for the clock display depending on what options are selected.\r\n         * @private\r\n         */\r\n        _grid() {\r\n            this._gridColumns = '';\r\n            const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = this._context._display._iconTag(this._context._options.display.icons.up), downIcon = this._context._display._iconTag(this._context._options.display.icons.down);\r\n            separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n            const separatorColon = separator.cloneNode(true);\r\n            separatorColon.innerHTML = ':';\r\n            const getSeparator = (colon = false) => {\r\n                return colon\r\n                    ? separatorColon.cloneNode(true)\r\n                    : separator.cloneNode(true);\r\n            };\r\n            if (this._context._options.display.components.hours) {\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementHours);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickHour);\r\n                divElement.setAttribute('data-action', ActionTypes.showHours);\r\n                divElement.setAttribute('data-time-component', Unit.hours);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementHour);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementHours);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n                this._gridColumns += 'a';\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                this._gridColumns += ' a';\r\n                if (this._context._options.display.components.hours) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                    this._gridColumns += ' a';\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementMinutes);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.showMinutes);\r\n                divElement.setAttribute('data-time-component', Unit.minutes);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementMinute);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementMinutes);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                this._gridColumns += ' a';\r\n                if (this._context._options.display.components.minutes) {\r\n                    top.push(getSeparator());\r\n                    middle.push(getSeparator(true));\r\n                    bottom.push(getSeparator());\r\n                    this._gridColumns += ' a';\r\n                }\r\n                let divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.incrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.incrementSeconds);\r\n                divElement.appendChild(upIcon.cloneNode(true));\r\n                top.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.pickSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.showSeconds);\r\n                divElement.setAttribute('data-time-component', Unit.seconds);\r\n                middle.push(divElement);\r\n                divElement = document.createElement('div');\r\n                divElement.setAttribute('title', this._context._options.localization.decrementSecond);\r\n                divElement.setAttribute('data-action', ActionTypes.decrementSeconds);\r\n                divElement.appendChild(downIcon.cloneNode(true));\r\n                bottom.push(divElement);\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                this._gridColumns += ' a';\r\n                let divElement = getSeparator();\r\n                top.push(divElement);\r\n                let button = document.createElement('button');\r\n                button.setAttribute('title', this._context._options.localization.toggleMeridiem);\r\n                button.setAttribute('data-action', ActionTypes.toggleMeridiem);\r\n                button.setAttribute('tabindex', '-1');\r\n                button.classList.add('btn', 'btn-primary'); //***\r\n                divElement = document.createElement('div');\r\n                divElement.classList.add(Namespace.css.noHighlight);\r\n                divElement.appendChild(button);\r\n                middle.push(divElement);\r\n                divElement = getSeparator();\r\n                bottom.push(divElement);\r\n            }\r\n            this._gridColumns = this._gridColumns.trim();\r\n            return [...top, ...middle, ...bottom];\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `hours`\r\n     */\r\n    class HourDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.hourContainer);\r\n            for (let i = 0; i <\r\n                (this._context._options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectHour);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.date);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectHour}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.hour);\r\n                if (!this._context._validation.isValid(innerDate, Unit.hours)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n                containerClone.innerText = this._context._options.display.components\r\n                    .useTwentyfourHour\r\n                    ? innerDate.hoursFormatted\r\n                    : innerDate.twelveHoursFormatted;\r\n                innerDate.manipulate(1, Unit.hours);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `minutes`\r\n     */\r\n    class MinuteDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.minuteContainer);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            for (let i = 0; i < 60 / step; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMinute);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.hours);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectMinute}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.minute);\r\n                if (!this._context._validation.isValid(innerDate, Unit.minutes)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.minutesFormatted}`);\r\n                containerClone.innerText = innerDate.minutesFormatted;\r\n                innerDate.manipulate(step, Unit.minutes);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class secondDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.css.secondContainer);\r\n            for (let i = 0; i < 12; i++) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectSecond);\r\n                container.appendChild(div);\r\n            }\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.minutes);\r\n            container\r\n                .querySelectorAll(`[data-action=\"${ActionTypes.selectSecond}\"]`)\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.css.second);\r\n                if (!this._context._validation.isValid(innerDate, Unit.seconds)) {\r\n                    classes.push(Namespace.css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n                containerClone.innerText = innerDate.secondsFormatted;\r\n                innerDate.manipulate(5, Unit.seconds);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Main class for all things display related.\r\n     */\r\n    class Display {\r\n        constructor(context) {\r\n            this._isVisible = false;\r\n            /**\r\n             * A document click event to hide the widget if click is outside\r\n             * @private\r\n             * @param e MouseEvent\r\n             */\r\n            this._documentClickEvent = (e) => {\r\n                var _a;\r\n                if (this._context._options.debug || window.debug)\r\n                    return;\r\n                if (this._isVisible &&\r\n                    !e.composedPath().includes(this.widget) && // click inside the widget\r\n                    !((_a = e.composedPath()) === null || _a === void 0 ? void 0 : _a.includes(this._context._element)) // click on the element\r\n                ) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            /**\r\n             * Click event for any action like selecting a date\r\n             * @param e MouseEvent\r\n             * @private\r\n             */\r\n            this._actionsClickEvent = (e) => {\r\n                this._context._action.do(e);\r\n            };\r\n            this._context = context;\r\n            this._dateDisplay = new DateDisplay(context);\r\n            this._monthDisplay = new MonthDisplay(context);\r\n            this._yearDisplay = new YearDisplay(context);\r\n            this._decadeDisplay = new DecadeDisplay(context);\r\n            this._timeDisplay = new TimeDisplay(context);\r\n            this._hourDisplay = new HourDisplay(context);\r\n            this._minuteDisplay = new MinuteDisplay(context);\r\n            this._secondDisplay = new secondDisplay(context);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Returns the widget body or undefined\r\n         * @private\r\n         */\r\n        get widget() {\r\n            return this._widget;\r\n        }\r\n        /**\r\n         * Returns this visible state of the picker (shown)\r\n         */\r\n        get isVisible() {\r\n            return this._isVisible;\r\n        }\r\n        /**\r\n         * Updates the table for a particular unit. Used when an option as changed or\r\n         * whenever the class list might need to be refreshed.\r\n         * @param unit\r\n         * @private\r\n         */\r\n        _update(unit) {\r\n            if (!this.widget)\r\n                return;\r\n            //todo do I want some kind of error catching or other guards here?\r\n            switch (unit) {\r\n                case Unit.seconds:\r\n                    this._secondDisplay._update();\r\n                    break;\r\n                case Unit.minutes:\r\n                    this._minuteDisplay._update();\r\n                    break;\r\n                case Unit.hours:\r\n                    this._hourDisplay._update();\r\n                    break;\r\n                case Unit.date:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n                case Unit.month:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Unit.year:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case 'clock':\r\n                    if (!this._hasTime)\r\n                        break;\r\n                    this._timeDisplay._update();\r\n                    this._update(Unit.hours);\r\n                    this._update(Unit.minutes);\r\n                    this._update(Unit.seconds);\r\n                    break;\r\n                case 'calendar':\r\n                    this._update(Unit.date);\r\n                    this._update(Unit.year);\r\n                    this._update(Unit.month);\r\n                    this._decadeDisplay._update();\r\n                    this._updateCalendarHeader();\r\n                    break;\r\n                case 'all':\r\n                    if (this._hasTime) {\r\n                        this._update('clock');\r\n                    }\r\n                    if (this._hasDate) {\r\n                        this._update('calendar');\r\n                    }\r\n            }\r\n        }\r\n        /**\r\n         * Shows the picker and creates a Popper instance if needed.\r\n         * Add document click event to hide when clicking outside the picker.\r\n         * @fires Events#show\r\n         */\r\n        show() {\r\n            var _a, _b, _c;\r\n            if (this.widget == undefined) {\r\n                if (this._context._options.useCurrent &&\r\n                    !this._context._options.defaultDate &&\r\n                    !((_a = this._context._input) === null || _a === void 0 ? void 0 : _a.value)) {\r\n                    //todo in the td4 branch a pr changed this to allow granularity\r\n                    const date = new DateTime().setLocale(this._context._options.localization.locale, this._context._options.meta.numberingSystem); //***\r\n                    if (!this._context._options.keepInvalid) {\r\n                        let tries = 0;\r\n                        let direction = 1;\r\n                        if ((_b = this._context._options.restrictions.maxDate) === null || _b === void 0 ? void 0 : _b.isBefore(date)) {\r\n                            direction = -1;\r\n                        }\r\n                        while (!this._context._validation.isValid(date)) {\r\n                            date.manipulate(direction, Unit.date);\r\n                            if (tries > 31)\r\n                                break;\r\n                            tries++;\r\n                        }\r\n                    }\r\n                    this._context.dates._setValue(date);\r\n                }\r\n                if (this._context._options.defaultDate) {\r\n                    this._context.dates._setValue(this._context._options.defaultDate);\r\n                }\r\n                this._buildWidget();\r\n                // If modeView is only clock\r\n                const onlyClock = this._hasTime && !this._hasDate;\r\n                // reset the view to the clock if there's no date components\r\n                if (onlyClock) {\r\n                    this._context._action.do(null, ActionTypes.showClock);\r\n                }\r\n                // otherwise return to the calendar view\r\n                this._context._currentViewMode = this._context._minViewModeNumber;\r\n                if (!onlyClock) {\r\n                    if (this._hasTime) {\r\n                        Collapse.hide(this._context._display.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                    }\r\n                    Collapse.show(this._context._display.widget.querySelector(`div.${Namespace.css.dateContainer}`));\r\n                }\r\n                if (this._hasDate) {\r\n                    this._showMode();\r\n                }\r\n                if (!this._context._options.display.inline) {\r\n                    // If needed to change the parent container\r\n                    const container = ((_c = this._context._options) === null || _c === void 0 ? void 0 : _c.container) || document.body;\r\n                    container.appendChild(this.widget);\r\n                    this._popperInstance = core.createPopper(this._context._element, this.widget, {\r\n                        modifiers: [{ name: 'eventListeners', enabled: true }],\r\n                        //#2400\r\n                        placement: document.documentElement.dir === 'rtl'\r\n                            ? 'bottom-end'\r\n                            : 'bottom-start'\r\n                    });\r\n                }\r\n                else {\r\n                    this._context._element.appendChild(this.widget);\r\n                }\r\n                if (this._context._options.display.viewMode == 'clock') {\r\n                    this._context._action.do(null, ActionTypes.showClock);\r\n                }\r\n                this.widget\r\n                    .querySelectorAll('[data-action]')\r\n                    .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n                // show the clock when using sideBySide\r\n                if (this._context._options.display.sideBySide) {\r\n                    this._timeDisplay._update();\r\n                    this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n                }\r\n            }\r\n            this.widget.classList.add(Namespace.css.show);\r\n            if (!this._context._options.display.inline) {\r\n                this._popperInstance.update();\r\n                document.addEventListener('click', this._documentClickEvent);\r\n            }\r\n            this._context._triggerEvent({ type: Namespace.events.show });\r\n            this._isVisible = true;\r\n        }\r\n        /**\r\n         * Changes the calendar view mode. E.g. month <-> year\r\n         * @param direction -/+ number to move currentViewMode\r\n         * @private\r\n         */\r\n        _showMode(direction) {\r\n            if (!this.widget) {\r\n                return;\r\n            }\r\n            if (direction) {\r\n                const max = Math.max(this._context._minViewModeNumber, Math.min(3, this._context._currentViewMode + direction));\r\n                if (this._context._currentViewMode == max)\r\n                    return;\r\n                this._context._currentViewMode = max;\r\n            }\r\n            this.widget\r\n                .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`)\r\n                .forEach((e) => (e.style.display = 'none'));\r\n            const datePickerMode = DatePickerModes[this._context._currentViewMode];\r\n            let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n            switch (datePickerMode.className) {\r\n                case Namespace.css.decadesContainer:\r\n                    this._decadeDisplay._update();\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n            }\r\n            picker.style.display = 'grid';\r\n            this._updateCalendarHeader();\r\n        }\r\n        _updateCalendarHeader() {\r\n            const showing = [\r\n                ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList\r\n            ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n            const [previous, switcher, next] = this._context._display.widget\r\n                .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                .getElementsByTagName('div');\r\n            switch (showing) {\r\n                case Namespace.css.decadesContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousCentury);\r\n                    switcher.setAttribute('title', '');\r\n                    next.setAttribute('title', this._context._options.localization.nextCentury);\r\n                    break;\r\n                case Namespace.css.yearsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousDecade);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectDecade);\r\n                    next.setAttribute('title', this._context._options.localization.nextDecade);\r\n                    break;\r\n                case Namespace.css.monthsContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousYear);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectYear);\r\n                    next.setAttribute('title', this._context._options.localization.nextYear);\r\n                    break;\r\n                case Namespace.css.daysContainer:\r\n                    previous.setAttribute('title', this._context._options.localization.previousMonth);\r\n                    switcher.setAttribute('title', this._context._options.localization.selectMonth);\r\n                    next.setAttribute('title', this._context._options.localization.nextMonth);\r\n                    switcher.innerText = this._context._viewDate.format(this._context._options.localization.dayViewHeaderFormat);\r\n                    break;\r\n            }\r\n            switcher.innerText = switcher.getAttribute(showing);\r\n        }\r\n        /**\r\n         * Hides the picker if needed.\r\n         * Remove document click event to hide when clicking outside the picker.\r\n         * @fires Events#hide\r\n         */\r\n        hide() {\r\n            if (!this.widget || !this._isVisible)\r\n                return;\r\n            this.widget.classList.remove(Namespace.css.show);\r\n            if (this._isVisible) {\r\n                this._context._triggerEvent({\r\n                    type: Namespace.events.hide,\r\n                    date: this._context._unset\r\n                        ? null\r\n                        : this._context.dates.lastPicked\r\n                            ? this._context.dates.lastPicked.clone\r\n                            : void 0\r\n                });\r\n                this._isVisible = false;\r\n            }\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n        }\r\n        /**\r\n         * Toggles the picker's open state. Fires a show/hide event depending.\r\n         */\r\n        toggle() {\r\n            return this._isVisible ? this.hide() : this.show();\r\n        }\r\n        /**\r\n         * Removes document and data-action click listener and reset the widget\r\n         * @private\r\n         */\r\n        _dispose() {\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n            if (!this.widget)\r\n                return;\r\n            this.widget\r\n                .querySelectorAll('[data-action]')\r\n                .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n            this.widget.parentNode.removeChild(this.widget);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Builds the widgets html template.\r\n         * @private\r\n         */\r\n        _buildWidget() {\r\n            const template = document.createElement('div');\r\n            template.classList.add(Namespace.css.widget);\r\n            const dateView = document.createElement('div');\r\n            dateView.classList.add(Namespace.css.dateContainer);\r\n            dateView.append(this._headTemplate, this._decadeDisplay._picker, this._yearDisplay._picker, this._monthDisplay._picker, this._dateDisplay._picker);\r\n            const timeView = document.createElement('div');\r\n            timeView.classList.add(Namespace.css.timeContainer);\r\n            timeView.appendChild(this._timeDisplay._picker);\r\n            timeView.appendChild(this._hourDisplay._picker);\r\n            timeView.appendChild(this._minuteDisplay._picker);\r\n            timeView.appendChild(this._secondDisplay._picker);\r\n            const toolbar = document.createElement('div');\r\n            toolbar.classList.add(Namespace.css.toolbar);\r\n            toolbar.append(...this._toolbar);\r\n            if (this._context._options.display.inline) {\r\n                template.classList.add(Namespace.css.inline);\r\n            }\r\n            if (this._context._options.display.calendarWeeks) {\r\n                template.classList.add('calendarWeeks');\r\n            }\r\n            if (this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                template.classList.add(Namespace.css.sideBySide);\r\n                if (this._context._options.display.toolbarPlacement === 'top') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                const row = document.createElement('div');\r\n                row.classList.add('td-row');\r\n                dateView.classList.add('td-half');\r\n                timeView.classList.add('td-half');\r\n                row.appendChild(dateView);\r\n                row.appendChild(timeView);\r\n                template.appendChild(row);\r\n                if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                this._widget = template;\r\n                return;\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'top') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            if (this._hasDate) {\r\n                if (this._hasTime) {\r\n                    dateView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode !== 'clock')\r\n                        dateView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(dateView);\r\n            }\r\n            if (this._hasTime) {\r\n                if (this._hasDate) {\r\n                    timeView.classList.add(Namespace.css.collapse);\r\n                    if (this._context._options.display.viewMode === 'clock')\r\n                        timeView.classList.add(Namespace.css.show);\r\n                }\r\n                template.appendChild(timeView);\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            const arrow = document.createElement('div');\r\n            arrow.classList.add('arrow');\r\n            arrow.setAttribute('data-popper-arrow', '');\r\n            template.appendChild(arrow);\r\n            this._widget = template;\r\n        }\r\n        /**\r\n         * Returns true if the hours, minutes, or seconds component is turned on\r\n         */\r\n        get _hasTime() {\r\n            return (this._context._options.display.components.clock &&\r\n                (this._context._options.display.components.hours ||\r\n                    this._context._options.display.components.minutes ||\r\n                    this._context._options.display.components.seconds));\r\n        }\r\n        /**\r\n         * Returns true if the year, month, or date component is turned on\r\n         */\r\n        get _hasDate() {\r\n            return (this._context._options.display.components.calendar &&\r\n                (this._context._options.display.components.year ||\r\n                    this._context._options.display.components.month ||\r\n                    this._context._options.display.components.date));\r\n        }\r\n        /**\r\n         * Get the toolbar html based on options like buttons.today\r\n         * @private\r\n         */\r\n        get _toolbar() {\r\n            const toolbar = [];\r\n            if (this._context._options.display.buttons.today) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.today);\r\n                div.setAttribute('title', this._context._options.localization.today);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.today));\r\n                toolbar.push(div);\r\n            }\r\n            if (!this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                let title, icon;\r\n                if (this._context._options.display.viewMode === 'clock') {\r\n                    title = this._context._options.localization.selectDate;\r\n                    icon = this._context._options.display.icons.date;\r\n                }\r\n                else {\r\n                    title = this._context._options.localization.selectTime;\r\n                    icon = this._context._options.display.icons.time;\r\n                }\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.togglePicker);\r\n                div.setAttribute('title', title);\r\n                div.appendChild(this._iconTag(icon));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.clear) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.clear);\r\n                div.setAttribute('title', this._context._options.localization.clear);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.clear));\r\n                toolbar.push(div);\r\n            }\r\n            if (this._context._options.display.buttons.close) {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.close);\r\n                div.setAttribute('title', this._context._options.localization.close);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.close));\r\n                toolbar.push(div);\r\n            }\r\n            return toolbar;\r\n        }\r\n        /***\r\n         * Builds the base header template with next and previous icons\r\n         * @private\r\n         */\r\n        get _headTemplate() {\r\n            const calendarHeader = document.createElement('div');\r\n            calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n            const previous = document.createElement('div');\r\n            previous.classList.add(Namespace.css.previous);\r\n            previous.setAttribute('data-action', ActionTypes.previous);\r\n            previous.appendChild(this._iconTag(this._context._options.display.icons.previous));\r\n            const switcher = document.createElement('div');\r\n            switcher.classList.add(Namespace.css.switch);\r\n            switcher.setAttribute('data-action', ActionTypes.pickerSwitch);\r\n            const next = document.createElement('div');\r\n            next.classList.add(Namespace.css.next);\r\n            next.setAttribute('data-action', ActionTypes.next);\r\n            next.appendChild(this._iconTag(this._context._options.display.icons.next));\r\n            calendarHeader.append(previous, switcher, next);\r\n            return calendarHeader;\r\n        }\r\n        /**\r\n         * Builds an icon tag as either an `<i>`\r\n         * or with icons.type is `sprites` then an svg tag instead\r\n         * @param iconClass\r\n         * @private\r\n         */\r\n        _iconTag(iconClass) {\r\n            if (this._context._options.display.icons.type === 'sprites') {\r\n                const svg = document.createElement('svg');\r\n                svg.innerHTML = `<use xlink:href='${iconClass}'></use>`;\r\n                return svg;\r\n            }\r\n            const icon = document.createElement('i');\r\n            DOMTokenList.prototype.add.apply(icon.classList, iconClass.split(' '));\r\n            return icon;\r\n        }\r\n        /**\r\n         * Causes the widget to get rebuilt on next show. If the picker is already open\r\n         * then hide and reshow it.\r\n         * @private\r\n         */\r\n        _rebuild() {\r\n            const wasVisible = this._isVisible;\r\n            if (wasVisible)\r\n                this.hide();\r\n            this._dispose();\r\n            if (wasVisible) {\r\n                this.show();\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Main class for date validation rules based on the options provided.\r\n     */\r\n    class Validation {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Checks to see if the target date is valid based on the rules provided in the options.\r\n         * Granularity can be provide to chek portions of the date instead of the whole.\r\n         * @param targetDate\r\n         * @param granularity\r\n         */\r\n        isValid(targetDate, granularity) {\r\n            var _a;\r\n            if (this._context._options.restrictions.disabledDates.length > 0 &&\r\n                this._isInDisabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.enabledDates.length > 0 &&\r\n                !this._isInEnabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (granularity !== Unit.month &&\r\n                granularity !== Unit.year &&\r\n                ((_a = this._context._options.restrictions.daysOfWeekDisabled) === null || _a === void 0 ? void 0 : _a.length) > 0 &&\r\n                this._context._options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.minDate &&\r\n                targetDate.isBefore(this._context._options.restrictions.minDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.maxDate &&\r\n                targetDate.isAfter(this._context._options.restrictions.maxDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (granularity === Unit.hours ||\r\n                granularity === Unit.minutes ||\r\n                granularity === Unit.seconds) {\r\n                if (this._context._options.restrictions.disabledHours.length > 0 &&\r\n                    this._isInDisabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.enabledHours.length > 0 &&\r\n                    !this._isInEnabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.disabledTimeIntervals.length > 0) {\r\n                    for (let i = 0; i < this._context._options.restrictions.disabledTimeIntervals.length; i++) {\r\n                        if (targetDate.isBetween(this._context._options.restrictions.disabledTimeIntervals[i].from, this._context._options.restrictions.disabledTimeIntervals[i].to))\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledDates(testDate) {\r\n            if (!this._context._options.restrictions.disabledDates ||\r\n                this._context._options.restrictions.disabledDates.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.disabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledDates(testDate) {\r\n            if (!this._context._options.restrictions.enabledDates ||\r\n                this._context._options.restrictions.enabledDates.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.enabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledHours(testDate) {\r\n            if (!this._context._options.restrictions.disabledHours ||\r\n                this._context._options.restrictions.disabledHours.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledHours(testDate) {\r\n            if (!this._context._options.restrictions.enabledHours ||\r\n                this._context._options.restrictions.enabledHours.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n        }\r\n    }\n\n    /**\r\n     * A robust and powerful date/time picker component.\r\n     */\r\n    class TempusDominus {\r\n        constructor(element, options = {}) {\r\n            this._currentViewMode = 0;\r\n            this._subscribers = {};\r\n            this._minViewModeNumber = 0;\r\n            this._isDisabled = false;\r\n            this._notifyChangeEventContext = 0;\r\n            this._viewDate = new DateTime();\r\n            /**\r\n             * Event for when the input field changes. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._inputChangeEvent = () => {\r\n                const setViewDate = () => {\r\n                    if (this.dates.lastPicked)\r\n                        this._viewDate = this.dates.lastPicked;\r\n                };\r\n                const value = this._input.value;\r\n                if (this._options.multipleDates) {\r\n                    try {\r\n                        const valueSplit = value.split(this._options.multipleDatesSeparator);\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            if (this._options.hooks.inputParse) {\r\n                                this.dates.set(this._options.hooks.inputParse(this, valueSplit[i]), i, 'input');\r\n                            }\r\n                            else {\r\n                                this.dates.set(valueSplit[i], i, 'input');\r\n                            }\r\n                        }\r\n                        setViewDate();\r\n                    }\r\n                    catch (_a) {\r\n                        console.warn('TD: Something went wrong trying to set the multidate values from the input field.');\r\n                    }\r\n                }\r\n                else {\r\n                    if (this._options.hooks.inputParse) {\r\n                        this.dates.set(this._options.hooks.inputParse(this, value), 0, 'input');\r\n                    }\r\n                    else {\r\n                        this.dates.set(value, 0, 'input');\r\n                    }\r\n                    setViewDate();\r\n                }\r\n            };\r\n            /**\r\n             * Event for when the toggle is clicked. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._toggleClickEvent = () => {\r\n                this.toggle();\r\n            };\r\n            if (!element) {\r\n                Namespace.errorMessages.mustProvideElement;\r\n            }\r\n            this._element = element;\r\n            this._options = this._initializeOptions(options, DefaultOptions, true);\r\n            this._viewDate.setLocale(this._options.localization.locale, this._options.meta.numberingSystem); //***\r\n            this._unset = true;\r\n            this._display = new Display(this);\r\n            this._validation = new Validation(this);\r\n            this.dates = new Dates(this);\r\n            this._action = new Actions(this);\r\n            this._initializeInput();\r\n            this._initializeToggle();\r\n            if (this._options.display.inline)\r\n                this._display.show();\r\n        }\r\n        get viewDate() {\r\n            return this._viewDate;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n         * @param options\r\n         * @param reset\r\n         * @public\r\n         */\r\n        updateOptions(options, reset = false) {\r\n            if (reset)\r\n                this._options = this._initializeOptions(options, DefaultOptions);\r\n            else\r\n                this._options = this._initializeOptions(options, this._options);\r\n            this._display._rebuild();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n         * @public\r\n         */\r\n        toggle() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.toggle();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Shows the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        show() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.show();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        hide() {\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Disables the picker and the target input field.\r\n         * @public\r\n         */\r\n        disable() {\r\n            var _a;\r\n            this._isDisabled = true;\r\n            // todo this might be undesired. If a dev disables the input field to\r\n            // only allow using the picker, this will break that.\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'disabled');\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Enables the picker and the target input field.\r\n         * @public\r\n         */\r\n        enable() {\r\n            var _a;\r\n            this._isDisabled = false;\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Clears all the selected dates\r\n         * @public\r\n         */\r\n        clear() {\r\n            this.dates.clear();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n         * @param eventTypes See Namespace.Events\r\n         * @param callbacks Function to call when event is triggered\r\n         * @public\r\n         */\r\n        subscribe(eventTypes, callbacks) {\r\n            if (typeof eventTypes === 'string') {\r\n                eventTypes = [eventTypes];\r\n            }\r\n            let callBackArray = [];\r\n            if (!Array.isArray(callbacks)) {\r\n                callBackArray = [callbacks];\r\n            }\r\n            else {\r\n                callBackArray = callbacks;\r\n            }\r\n            if (eventTypes.length !== callBackArray.length) {\r\n                Namespace.errorMessages.subscribeMismatch;\r\n            }\r\n            const returnArray = [];\r\n            for (let i = 0; i < eventTypes.length; i++) {\r\n                const eventType = eventTypes[i];\r\n                if (!Array.isArray(this._subscribers[eventType])) {\r\n                    this._subscribers[eventType] = [];\r\n                }\r\n                this._subscribers[eventType].push(callBackArray[i]);\r\n                returnArray.push({\r\n                    unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n                });\r\n                if (eventTypes.length === 1) {\r\n                    return returnArray[0];\r\n                }\r\n            }\r\n            return returnArray;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker and removes event listeners\r\n         */\r\n        dispose() {\r\n            var _a, _b;\r\n            this._display.hide();\r\n            // this will clear the document click event listener\r\n            this._display._dispose();\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                (_b = this._input) === null || _b === void 0 ? void 0 : _b.removeEventListener('click', this._toggleClickEvent);\r\n            }\r\n            this._toggle.removeEventListener('click', this._toggleClickEvent);\r\n            this._subscribers = {};\r\n        }\r\n        /**\r\n         * Triggers an event like ChangeEvent when the picker has updated the value\r\n         * of a selected date.\r\n         * @param event Accepts a BaseEvent object.\r\n         * @private\r\n         */\r\n        _triggerEvent(event) {\r\n            // checking hasOwnProperty because the BasicEvent also falls through here otherwise\r\n            if (event && event.hasOwnProperty('date')) {\r\n                const { date, oldDate, isClear } = event;\r\n                // this was to prevent a max call stack error\r\n                // https://github.com/tempusdominus/core/commit/15a280507f5277b31b0b3319ab1edc7c19a000fb\r\n                // todo see if this is still needed or if there's a cleaner way\r\n                this._notifyChangeEventContext++;\r\n                if ((date && oldDate && date.isSame(oldDate)) ||\r\n                    (!isClear && !date && !oldDate) ||\r\n                    this._notifyChangeEventContext > 1) {\r\n                    this._notifyChangeEventContext = 0;\r\n                    return;\r\n                }\r\n                this._handleAfterChangeEvent(event);\r\n            }\r\n            this._element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n            if (window.jQuery) {\r\n                const $ = window.jQuery;\r\n                $(this._element).trigger(event);\r\n            }\r\n            const publish = () => {\r\n                // return if event is not subscribed\r\n                if (!Array.isArray(this._subscribers[event.type])) {\r\n                    return;\r\n                }\r\n                // Trigger callback for each subscriber\r\n                this._subscribers[event.type].forEach((callback) => {\r\n                    callback(event);\r\n                });\r\n            };\r\n            publish();\r\n            this._notifyChangeEventContext = 0;\r\n        }\r\n        /**\r\n         * Fires a ViewUpdate event when, for example, the month view is changed.\r\n         * @param {Unit} unit\r\n         * @private\r\n         */\r\n        _viewUpdate(unit) {\r\n            this._triggerEvent({\r\n                type: Namespace.events.update,\r\n                change: unit,\r\n                viewDate: this._viewDate.clone,\r\n            });\r\n        }\r\n        _unsubscribe(eventName, index) {\r\n            this._subscribers[eventName].splice(index, 1);\r\n        }\r\n        /**\r\n         * Merges two Option objects together and validates options type\r\n         * @param config new Options\r\n         * @param mergeTo Options to merge into\r\n         * @param includeDataset When true, the elements data-td attributes will be included in the\r\n         * @private\r\n         */\r\n        _initializeOptions(config, mergeTo, includeDataset = false) {\r\n            var _a;\r\n            config = OptionConverter._mergeOptions(config, mergeTo);\r\n            if (includeDataset)\r\n                config = OptionConverter._dataToOptions(this._element, config);\r\n            OptionConverter._validateConflcits(config);\r\n            config.viewDate = config.viewDate.setLocale(config.localization.locale, config.meta.numberingSystem); //***\r\n            if (!this._viewDate.isSame(config.viewDate)) {\r\n                this._viewDate = config.viewDate;\r\n            }\r\n            /**\r\n             * Sets the minimum view allowed by the picker. For example the case of only\r\n             * allowing year and month to be selected but not date.\r\n             */\r\n            if (config.display.components.year) {\r\n                this._minViewModeNumber = 2;\r\n            }\r\n            if (config.display.components.month) {\r\n                this._minViewModeNumber = 1;\r\n            }\r\n            if (config.display.components.date) {\r\n                this._minViewModeNumber = 0;\r\n            }\r\n            this._currentViewMode = Math.max(this._minViewModeNumber, this._currentViewMode);\r\n            // Update view mode if needed\r\n            if (DatePickerModes[this._currentViewMode].name !== config.display.viewMode) {\r\n                this._currentViewMode = Math.max(DatePickerModes.findIndex((x) => x.name === config.display.viewMode), this._minViewModeNumber);\r\n            }\r\n            // defaults the input format based on the components enabled\r\n            if (config.hooks.inputFormat === undefined) {\r\n                const components = config.display.components;\r\n                config.hooks.inputFormat = (_, date) => {\r\n                    if (!date)\r\n                        return '';\r\n                    if (config.meta.format && typeof config.meta.format === 'string') { //***\r\n                        let options = {\r\n                            locale: config.localization.locale,\r\n                            numberingSystem: (config.meta.numberingSystem || (new Intl.NumberFormat(config.localization.locale)).resolvedOptions().numberingSystem)\r\n                        };\r\n                        return date ? luxon__namespace.DateTime.fromJSDate(date, options).toFormat(config.meta.format) : \"\";\r\n                    }\r\n                    else {\r\n                        return date.format({\r\n                            year: components.calendar && components.year ? 'numeric' : undefined,\r\n                            month: components.calendar && components.month ? '2-digit' : undefined,\r\n                            day: components.calendar && components.date ? '2-digit' : undefined,\r\n                            hour: components.clock && components.hours\r\n                                ? components.useTwentyfourHour\r\n                                    ? '2-digit'\r\n                                    : 'numeric'\r\n                                : undefined,\r\n                            minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n                            second: components.clock && components.seconds ? '2-digit' : undefined,\r\n                            hour12: !components.useTwentyfourHour,\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n            if (config.hooks.inputParse === undefined) { //***\r\n                if (config.meta.format && typeof config.meta.format == 'string') {\r\n                    config.hooks.inputParse = (_, value) => {\r\n                        let options = {\r\n                            locale: config.localization.locale,\r\n                            numberingSystem: (config.meta.numberingSystem || (new Intl.NumberFormat(config.localization.locale)).resolvedOptions().numberingSystem)\r\n                        };\r\n                        let parsedDate = new DateTime(luxon__namespace.DateTime.fromFormat(value, config.meta.format, options).toJSDate());\r\n                        // Check if the date is valid (An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.)\r\n                        if (parsedDate && parsedDate.getTime() === parsedDate.getTime())\r\n                            return parsedDate.setLocale(config.localization.locale, config.meta.numberingSystem); //***\r\n                        else\r\n                            return value;\r\n                    };\r\n                }\r\n            }\r\n            if ((_a = this._display) === null || _a === void 0 ? void 0 : _a.isVisible) {\r\n                this._display._update('all');\r\n            }\r\n            return config;\r\n        }\r\n        /**\r\n         * Checks if an input field is being used, attempts to locate one and sets an\r\n         * event listener if found.\r\n         * @private\r\n         */\r\n        _initializeInput() {\r\n            if (this._element.tagName == 'INPUT') {\r\n                this._input = this._element;\r\n            }\r\n            else {\r\n                let query = this._element.dataset.tdTargetInput;\r\n                if (query == undefined || query == 'nearest') {\r\n                    this._input = this._element.querySelector('input');\r\n                }\r\n                else {\r\n                    this._input = this._element.querySelector(query);\r\n                }\r\n            }\r\n            if (!this._input)\r\n                return;\r\n            this._input.addEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                this._input.addEventListener('click', this._toggleClickEvent);\r\n            }\r\n            if (this._input.value) {\r\n                this._inputChangeEvent();\r\n            }\r\n        }\r\n        /**\r\n         * Attempts to locate a toggle for the picker and sets an event listener\r\n         * @private\r\n         */\r\n        _initializeToggle() {\r\n            if (this._options.display.inline)\r\n                return;\r\n            let query = this._element.dataset.tdTargetToggle;\r\n            if (query == 'nearest') {\r\n                query = '[data-td-toggle=\"datetimepicker\"]';\r\n            }\r\n            this._toggle =\r\n                query == undefined ? this._element : this._element.querySelector(query);\r\n            this._toggle.addEventListener('click', this._toggleClickEvent);\r\n        }\r\n        /**\r\n         * If the option is enabled this will render the clock view after a date pick.\r\n         * @param e change event\r\n         * @private\r\n         */\r\n        _handleAfterChangeEvent(e) {\r\n            var _a, _b;\r\n            if (\r\n            // options is disabled\r\n            !this._options.promptTimeOnDateChange ||\r\n                this._options.display.inline ||\r\n                this._options.display.sideBySide ||\r\n                // time is disabled\r\n                !this._display._hasTime ||\r\n                (\r\n                // clock component is already showing\r\n                (_a = this._display.widget) === null || _a === void 0 ? void 0 : _a.getElementsByClassName(Namespace.css.show)[0].classList.contains(Namespace.css.timeContainer)))\r\n                return;\r\n            // First time ever. If useCurrent option is set to true (default), do nothing\r\n            // because the first date is selected automatically.\r\n            // or date didn't change (time did) or date changed because time did.\r\n            if ((!e.oldDate && this._options.useCurrent) ||\r\n                (e.oldDate && ((_b = e.date) === null || _b === void 0 ? void 0 : _b.isSame(e.oldDate)))) {\r\n                return;\r\n            }\r\n            clearTimeout(this._currentPromptTimeTimeout);\r\n            this._currentPromptTimeTimeout = setTimeout(() => {\r\n                if (this._display.widget) {\r\n                    this._action.do({\r\n                        currentTarget: this._display.widget.querySelector(`.${Namespace.css.switch} div`),\r\n                    }, ActionTypes.togglePicker);\r\n                }\r\n            }, this._options.promptTimeOnDateChangeTransitionDelay);\r\n        }\r\n    }\n\n    var _tempusDominus = {\n        __proto__: null,\n        TempusDominus: TempusDominus,\n        Namespace: Namespace,\n        DefaultOptions: DefaultOptions,\n        DateTime: DateTime,\n        get Unit () { return Unit; }\n    };\n\n    /*global $ */\n\n    //window.tempusDominus.Namespace.Events\n    const tempusDominus = _tempusDominus; //***\n\n    /*!\n      * Tempus Dominus v6.0.0-beta2 (https://getdatepicker.com/)\n      * Copyright 2013-2021 [object Object]\n      * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n      */\n    tempusDominus.jQueryInterface = function (option, argument) {\n      if (this.length === 1) {\n        return tempusDominus.jQueryHandleThis(this, option, argument);\n      }\n      // \"this\" is jquery here\n      return this.each(function () {\n        tempusDominus.jQueryHandleThis(this, option, argument);\n      });\n    };\n\n    tempusDominus.jQueryHandleThis = function (me, option, argument) {\n      let data = $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey);\n      if (typeof option === 'object') {\n        option = $__default[\"default\"].extend({}, tempusDominus.DefaultOptions, option); //***\n      }\n\n      if (!data) {\n        data = new tempusDominus.TempusDominus($__default[\"default\"](me)[0], option);\n        $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey, data);\n      }\n\n      if (typeof option === 'string') {\n        if (data[option] === undefined) {\n          throw new Error(`No method named \"${option}\"`);\n        }\n        if (argument === undefined) {\n          return data[option]();\n        } else {\n          if (option === 'date') {\n            data.isDateUpdateThroughDateOptionFromClientCode = true;\n          }\n          const ret = data[option](argument);\n          data.isDateUpdateThroughDateOptionFromClientCode = false;\n          return ret;\n        }\n      }\n    };\n\n    tempusDominus.getSelectorFromElement = function ($element) {\n      let selector = $element.data('target'),\n        $selector;\n\n      if (!selector) {\n        selector = $element.attr('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n      $selector = $__default[\"default\"](selector);\n      if ($selector.length === 0) {\n        return $element;\n      }\n\n      if (!$selector.data(tempusDominus.Namespace.dataKey)) {\n        $__default[\"default\"].extend({}, $selector.data(), $__default[\"default\"](this).data());\n      }\n\n      return $selector;\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n    //*** $(document)\n    //   .on(\n    //     `click${tempusDominus.Namespace.Events.key}.data-api`,\n    //     `[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`, //***\n    //     function () {\n    //       const $originalTarget = $(this),\n    //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (\n    //         config.options.allowInputToggle && //***\n    //         $originalTarget.is(`input[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`) //***\n    //       ) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'toggle');\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.change,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this));\n    //       if ($target.length === 0 || event.isInit) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, '_change', event);\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.blur,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (config.options.debug || window.debug) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n    //     }\n    //   )\n    //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n    //   })\n    //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n    //   })*/\n    //   .on(\n    //     tempusDominus.Namespace.Events.focus,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (!config.options.allowInputToggle) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'show', event);\n    //     }\n    //   );\n    const name = 'tempusDominus';\n    $__default[\"default\"].fn[name] = tempusDominus.jQueryInterface;\n    $__default[\"default\"].fn[name].Constructor = tempusDominus.TempusDominus;\n    $__default[\"default\"].fn[name].noConflict = function () {\n      $__default[\"default\"].fn[name] = $__default[\"default\"].fn[name];\n      return tempusDominus.jQueryInterface;\n    };\n\n    return tempusDominus;\n\n})(jQuery, Popper, luxon);\n//# sourceMappingURL=tempus-dominus.js.map\n"]}